infected <- sample(nodes,size)
infected
size
size <- length(nodes)*0.05
size
infected <- sample(nodes,size)
infected
ifelse(infected %in% nodes, TRUE, FALSE)
which(nodes == infected)
nodes[which(nodes == infected)]
ifelse(nodes == infected, T, F)
size
nodes
length(ifelse(nodes == infected, T, F))
vec <- ifelse(nodes == infected, T, F)
sum(vec)
infected
nodes
l <- list(1,2,3)
c <- c(1,2,3)
l
c
0.12043-((1-0.4469)*(1-0.4425))
(-0.187)^2/(0.4469*(1-0.4469)*(1-0.4425)*0.4425)
sqrt(0.5734705)
0.5734705*200
# knitr options
knitr::opts_chunk$set(echo = TRUE)
data <- fread(file = "CHD.raw")
# Install packages
# Load packages
library(data.table)
library(dplyr)
data <- fread(file = "CHD.raw")
system(plink --bfile CHD --recodeA --out CHD)
system("plink --bfile CHD --recodeA --out CHD")
expand_name <- function(name,reps) {
sapply(name, function(letter) rep(letter,reps)) %>% c()
}
expand_name('ramon',10)
require('dplyr')
expand_name <- function(name,reps) {
sapply(name, function(letter) rep(letter,reps)) %>% c()
}
expand_name('ramon',10)
strsplit('ramon')
strsplit('ramon',1)
?strsplit
strsplit('ramon','')
strsplit('ramon','') %>% unlist()
letters <- strsplit('ramon','') %>% unlist()
sapply(letters, function(letter) rep(letter,reps)) %>% c()
expand_name <- function(name,reps) {
letters <- strsplit('ramon','') %>% unlist()
sapply(letters, function(letter) rep(letter,reps)) %>% c()
}
expand_name('ramon',10)
list(r1='r1',pixels = rep(0,20))
list(r1='r1',pixels = 1:20)
list(r1='r1',pixels = 1:20,color = rep(0,20))
r1 <- list(r1='r1',pixels = 1:20,color = rep(0,20))
r1$color[5:15]
r1$color[5:15] <- 1
r1
r2$color[c(10,15)] <- 1
r2 <- list(r2='r2',pixels = 1:20,color = rep(0,20))
r2$color[c(10,15)] <- 1
r2
r3$color[c(9,11,15)] <- 1
r1 <- list(r1='r1',pixels = 1:20,color = rep(0,20))
r2 <- list(r2='r2',pixels = 1:20,color = rep(0,20))
r3 <- list(r3='r3',pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[c(10,15)] <- 1
r3$color[c(9,11,15)] <- 1
data.frame(r1,r2,r2)
list(r1,r2,r2)
big_list <- list(r1,r2,r2)
do.call(rbind.data.frame,big_list)
do.call(cbind.data.frame,big_list)
do.call(rbind,big_list)
r1 <- list(r1=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r2=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r3=rep('r3',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[c(10,15)] <- 1
r3$color[c(9,11,15)] <- 1
big_list <- list(r1,r2,r2)
do.call(rbind,big_list)
do.call(rbind.data.frame,big_list)
big_list
big_list <- list(r1,r2,r3)
do.call(rbind.data.frame,big_list)
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[c(10,15)] <- 1
r3$color[c(9,11,15)] <- 1
big_list <- list(r1,r2,r3)
do.call(rbind.data.frame,big_list)
require('ggplot2')
ggplot() + geom_tile(aes(r,pixels,fill=color))
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r3$color[c(10,15)] <- 1
big_list <- list(r1,r2,r3)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[c(10,15)] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,11,14)] <- 1
big_list <- list(r1,r2,r3)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
big_list <- list(r1,r2,r3,r4)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[c(10,15)] <- 1
r3$color[c(9,11,14)] <- 1
big_list <- list(r1,r2,r3)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r5$color[c(9,11,14)] <- 1
big_list <- list(r1,r2,r3,r4,r5)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[c(10,15)] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,11,14)] <- 1
r5$color[c(9,11,14)] <- 1
big_list <- list(r1,r2,r3,r4,r5)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(10,15)] <- 1
r5$color[c(10,15)] <- 1
r6$color[c(10,15)] <- 1
r7$color[c(9,11,14)] <- 1
r8$color[c(9,11,14)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r8$color[c(8,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(10,15)] <- 1
r5$color[c(10,15)] <- 1
r6$color[c(10,15)] <- 1
r7$color[c(9,11,14)] <- 1
r8$color[c(8,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(10,15)] <- 1
r5$color[c(10,15)] <- 1
r6$color[c(9,10,15)] <- 1
r7$color[c(8,11,14)] <- 1
r8$color[c(7,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(10,15)] <- 1
r5$color[c(9,10,15)] <- 1
r6$color[c(8,10,15)] <- 1
r7$color[c(7,11,14)] <- 1
r8$color[c(6,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,10,15)] <- 1
r5$color[c(8,10,15)] <- 1
r6$color[c(7,10,15)] <- 1
r7$color[c(6,11,14)] <- 1
r8$color[c(5,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(9,10,15)] <- 1
r4$color[c(8,10,15)] <- 1
r5$color[c(7,10,15)] <- 1
r6$color[c(6,10,15)] <- 1
r7$color[c(5,11,14)] <- 1
r8$color[c(5,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,10,15)] <- 1
r5$color[c(8,10,15)] <- 1
r6$color[c(7,10,15)] <- 1
r7$color[c(6,11,14)] <- 1
r8$color[c(5,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r9 <- list(r=rep('r9',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,10,15)] <- 1
r5$color[c(8,10,15)] <- 1
r6$color[c(7,10,15)] <- 1
r7$color[c(6,11,14)] <- 1
r8$color[c(5,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8,r9)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r0 <- list(r=rep('r0',20),pixels = 1:20,color = rep(0,20))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r9 <- list(r=rep('r9',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,10,15)] <- 1
r5$color[c(8,10,15)] <- 1
r6$color[c(7,10,15)] <- 1
r7$color[c(6,11,14)] <- 1
r8$color[c(5,12,13)] <- 1
big_list <- list(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color)) + theme_minimal()
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color)) + theme_minimal() + theme(legend.position = 'none')
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color)) + theme_minimal() +
theme(legend.position = 'none',axis.title = element_blank())
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color)) + theme_minimal() +
theme(legend.position = 'none',axis.title = element_blank(), axis.text = element_blank())
r0 <- list(r=rep('r0',20),pixels = 1:20,color = rep(0,20))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r9 <- list(r=rep('r9',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,10,15)] <- 1
r5$color[c(8,10,15)] <- 1
r6$color[c(7,10,15)] <- 1
r7$color[c(6,11,14)] <- 1
r8$color[c(5,12,13)] <- 1
big_list <- list(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color)) + theme_minimal() +
theme(legend.position = 'none',axis.title = element_blank())
getwd()
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/FIB/IQL/project/IQL-Research-Project-21-22/code")
library('here')
# import data
langs_df    <- read.csv(here("pud_data/utils/PUD_languages.csv")) %>% `colnames<-` (c("language","iso"))
library('dplyr')
# import data
langs_df    <- read.csv(here("pud_data/utils/PUD_languages.csv")) %>% `colnames<-` (c("language","iso"))
langs       <- langs_df$language
langs
library('ISOcodes')
ISO <- sapply(langs,function(l) ISO_639_3 %>% filter(Name==l) %>% dplyr::select(1)) %>% unlist() %>% unname() #%>% sort()
labs <- langs; names(labs) <- ISO
labs
language <- "Czech"
labs[language]
labs$"Czech"
labs[names(labs) == "Czech"]
labs$`ara`
ISO
ISO[langs == language]
# functions
open_df <- function(language) {
iso_language <- if (language %in% langs) ISO[langs == language] else language
read.csv(paste0("data/",iso_language,".csv"))
}
# bind all dfs and add language
res <- lapply(langs, function(lang) open_df(lang)[-1])
# functions
open_df <- function(language) {
iso_language <- if (language %in% langs) ISO[langs == language] else language
read.csv(paste0(here("pud_data/",iso_language,"_pud.csv")))
}
# functions
read_df <- function(language, strokes) {
iso_language <- if (language %in% langs) ISO[langs == language] else language
str_suffix <- ifelse(strokes == T & iso_language %in% c('zho','jpn'),'_strokes','')
read.csv(paste0(here("pud_data/",iso_language,"_pud",str_suffix,".csv")))
}
# functions
read_df <- function(language, strokes=T) {
iso_language <- if (language %in% langs) ISO[langs == language] else language
str_suffix <- ifelse(strokes == T & iso_language %in% c('zho','jpn'),'_strokes','')
read.csv(paste0(here("pud_data/",iso_language,"_pud",str_suffix,".csv")))
}
# bind all dfs and add language
res <- lapply(langs, function(lang) read_df(lang)[-1])
# functions
read_df <- function(language, strokes=T) {
iso_language <- if (language %in% langs) ISO[langs == language] else language
str_suffix <- ifelse(strokes == T & iso_language %in% c('zho','jpn'),'_strokes','')
read.csv(here("pud_data",paste0(iso_language,"_pud",str_suffix,".csv")))
}
# bind all dfs and add language
res <- lapply(langs, function(lang) read_df(lang)[-1])
all_df <- do.call(rbind,res) %>%
mutate(index=1:nrow(.),language = rep(langs,sapply(res, nrow))) %>%
filter(length != 0)
# identify obs to mark (sample top 90% percentile of freq and length)
top_freq_id <- all_df %>% group_by(language) %>%
group_modify(~head(.x,2)) %>% dplyr::select(index)
all_df
# identify obs to mark (sample top 90% percentile of freq and length)
top_freq_id <- all_df %>% group_by(language) %>%
group_modify(~head(.x,2)) %>% dplyr::select(index)
top_length_id <- all_df %>% arrange(desc(length)) %>%
group_by(language) %>% group_modify(~head(.x,2)) %>% dplyr::select(index)
all_df$lab <- ifelse(all_df$index %in% c(top_freq_id$index,top_length_id$index),
all_df$word,"")
lang_to_use <- subset(all_df, language %in% c("Turkish","Czech","Italian","Russian","Icelandic","German"))
library('ggplot2')
plot <- ggplot(lang_to_use,aes(x=frequency,y=length,label = lab)) +
geom_point(color = ifelse(lang_to_use$lab != "",  "red","grey50")) + facet_wrap(~language) +
geom_text_repel(max.overlaps = 10)
require("ggrepel")
plot <- ggplot(lang_to_use,aes(x=frequency,y=length,label = lab)) +
geom_point(color = ifelse(lang_to_use$lab != "",  "red","grey50")) + facet_wrap(~language) +
geom_text_repel(max.overlaps = 10)
plot
plot <- ggplot(lang_to_use,aes(x=frequency,y=length,label = lab)) +
geom_point(color = ifelse(lang_to_use$lab != "",  "red","grey50")) + facet_wrap(~language) +
geom_text_repel(max.overlaps = 10)
plot
ggplot(lang_to_use,aes(x=frequency,y=length,label = lab)) +
geom_point(color = ifelse(lang_to_use$lab != "",  "red","grey50")) + facet_wrap(~language) +
#geom_text_repel(max.overlaps = 10) +
scale_y_log10
ggplot(lang_to_use,aes(x=frequency,y=length,label = lab)) +
geom_point(color = ifelse(lang_to_use$lab != "",  "red","grey50")) + facet_wrap(~language) +
#geom_text_repel(max.overlaps = 10) +
scale_y_log10()
ggplot(lang_to_use,aes(x=frequency,y=length,label = lab)) +
geom_point(color = ifelse(lang_to_use$lab != "",  "red","grey50")) + facet_wrap(~language) +
#geom_text_repel(max.overlaps = 10) +
scale_y_log10() + scale_x_log()
ggplot(lang_to_use,aes(x=frequency,y=length,label = lab)) +
geom_point(color = ifelse(lang_to_use$lab != "",  "red","grey50")) + facet_wrap(~language) +
#geom_text_repel(max.overlaps = 10) +
scale_y_log10() + scale_x_log10()
plot <- ggplot(lang_to_use,aes(x=frequency,y=length,label = lab)) +
geom_point(color = ifelse(lang_to_use$lab != "",  "red","grey50")) + facet_wrap(~language) +
geom_text_repel(max.overlaps = 10) +
scale_y_log10() + scale_x_log10()
plot
lang_to_use <- subset(all_df, language %in% c("Turkish","Czech","Chinese","Russian","Japanese","German"))
warnings()
plot <- ggplot(lang_to_use,aes(x=frequency,y=length,label = lab)) +
geom_point(color = ifelse(lang_to_use$lab != "",  "red","grey50")) + facet_wrap(~language) +
geom_text_repel(max.overlaps = 10) +
scale_y_log10() + scale_x_log10()
plot
lang <- 'ita'
warnings()
lang <- 'ita'
df         <- read_df(lang)[-1] %>% mutate(rank=1:nrow(.))
df
Lmin  <- sum(sort(df$length, decreasing=T)*p)                         # min baseline
N_types    <- nrow(df)
p <- df$frequency/sum(df$frequency)
Lmin  <- sum(sort(df$length, decreasing=T)*p)                         # min baseline
Lmin
L
L     <- sum(df$length*p)                                                      # real value (weight by freq)
L
Lmin  <- sum(sort(df$length)*p)                         # min baseline
Lmin
res <- lapply(langs, function(lang) {
df         <- read_df(lang)[-1] %>% mutate(rank=1:nrow(.))
N_types    <- nrow(df)
p <- df$frequency/sum(df$frequency)
Lmin  <- sum(sort(df$length)*p)                                                # min baseline
L     <- sum(df$length*p)                                                      # real value (weight by freq)
Lrand <- sum(df$length)/N_types                                                # random baseline (unweighted)
eta   <- Lmin/L
omega <- (Lrand-L)/(Lrand-Lmin)
list("language"=lang, "Lmin"=Lmin, "L"=L, "Lrand"=Lrand, "eta"=eta,"omega"=omega)
})
opt_df <- do.call(rbind.data.frame,res)
opt_df
# functions
read_df <- function(language, collection, strokes=T) {
iso_language <- if (language %in% langs) ISO[langs == language] else language
if (collection == 'pud') {
str_suffix <- ifelse(strokes == T & iso_language %in% c('zho','jpn'),'_strokes','')
read.csv(here("pud_data",paste0(iso_language,"_pud",str_suffix,".csv")))
}
}
compute_optimality_scores <- function(collection) {
res <- lapply(langs, function(lang) {
df         <- read_df(lang,collection)[-1] %>% mutate(rank=1:nrow(.))
N_types    <- nrow(df)
p <- df$frequency/sum(df$frequency)
Lmin  <- sum(sort(df$length)*p)                                                # min baseline
L     <- sum(df$length*p)                                                      # real value (weight by freq)
Lrand <- sum(df$length)/N_types                                                # random baseline (unweighted)
eta   <- Lmin/L
omega <- (Lrand-L)/(Lrand-Lmin)
list("language"=lang, "Lmin"=Lmin, "L"=L, "Lrand"=Lrand, "eta"=eta,"omega"=omega)
})
do.call(rbind.data.frame,res)
}
# save df
opt_df <- compute_optimality_scores('pud')
opt_df
langs_pud  <- langs_df$language
ISO_pud    <- sapply(langs_pud,function(l) ISO_639_3 %>% filter(Name==l) %>% dplyr::select(1)) %>% unlist() %>% unname()
