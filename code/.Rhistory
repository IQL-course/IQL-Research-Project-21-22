r1$color[5:15] <- 1
r2$color[c(10,15)] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,11,14)] <- 1
big_list <- list(r1,r2,r3)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
big_list <- list(r1,r2,r3,r4)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[c(10,15)] <- 1
r3$color[c(9,11,14)] <- 1
big_list <- list(r1,r2,r3)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r5$color[c(9,11,14)] <- 1
big_list <- list(r1,r2,r3,r4,r5)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[c(10,15)] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,11,14)] <- 1
r5$color[c(9,11,14)] <- 1
big_list <- list(r1,r2,r3,r4,r5)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(10,15)] <- 1
r5$color[c(10,15)] <- 1
r6$color[c(10,15)] <- 1
r7$color[c(9,11,14)] <- 1
r8$color[c(9,11,14)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r8$color[c(8,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(10,15)] <- 1
r5$color[c(10,15)] <- 1
r6$color[c(10,15)] <- 1
r7$color[c(9,11,14)] <- 1
r8$color[c(8,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(10,15)] <- 1
r5$color[c(10,15)] <- 1
r6$color[c(9,10,15)] <- 1
r7$color[c(8,11,14)] <- 1
r8$color[c(7,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(10,15)] <- 1
r5$color[c(9,10,15)] <- 1
r6$color[c(8,10,15)] <- 1
r7$color[c(7,11,14)] <- 1
r8$color[c(6,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,10,15)] <- 1
r5$color[c(8,10,15)] <- 1
r6$color[c(7,10,15)] <- 1
r7$color[c(6,11,14)] <- 1
r8$color[c(5,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(9,10,15)] <- 1
r4$color[c(8,10,15)] <- 1
r5$color[c(7,10,15)] <- 1
r6$color[c(6,10,15)] <- 1
r7$color[c(5,11,14)] <- 1
r8$color[c(5,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,10,15)] <- 1
r5$color[c(8,10,15)] <- 1
r6$color[c(7,10,15)] <- 1
r7$color[c(6,11,14)] <- 1
r8$color[c(5,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r9 <- list(r=rep('r9',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,10,15)] <- 1
r5$color[c(8,10,15)] <- 1
r6$color[c(7,10,15)] <- 1
r7$color[c(6,11,14)] <- 1
r8$color[c(5,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8,r9)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r0 <- list(r=rep('r0',20),pixels = 1:20,color = rep(0,20))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r9 <- list(r=rep('r9',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,10,15)] <- 1
r5$color[c(8,10,15)] <- 1
r6$color[c(7,10,15)] <- 1
r7$color[c(6,11,14)] <- 1
r8$color[c(5,12,13)] <- 1
big_list <- list(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color)) + theme_minimal()
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color)) + theme_minimal() + theme(legend.position = 'none')
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color)) + theme_minimal() +
theme(legend.position = 'none',axis.title = element_blank())
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color)) + theme_minimal() +
theme(legend.position = 'none',axis.title = element_blank(), axis.text = element_blank())
r0 <- list(r=rep('r0',20),pixels = 1:20,color = rep(0,20))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r9 <- list(r=rep('r9',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,10,15)] <- 1
r5$color[c(8,10,15)] <- 1
r6$color[c(7,10,15)] <- 1
r7$color[c(6,11,14)] <- 1
r8$color[c(5,12,13)] <- 1
big_list <- list(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color)) + theme_minimal() +
theme(legend.position = 'none',axis.title = element_blank())
source('R_functions.R')
getwd()
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/FIB/IQL/project/IQL-Research-Project-21-22/code")
source('R_functions.R')
collection <- 'cv'
collection <- 'pud'
opt_df <- compute_optimality_scores(collection,length)
opt_df
tau_df <- compute_tau_corr(collection,length)
tau_df
# + collections summary TO DO once writing system is added
langs_df_pud
# + collections summary TO DO once writing system is added
langs_df_pud %>% mutate(dialect = NULL, iso_code = NULL) %>% rename(tokens = X.tokens, types = X.types)
# + collections summary TO DO once writing system is added
sum_coll <- langs_df_pud %>% mutate(dialect = NULL, iso_code = NULL) %>% rename(tokens = X.tokens, types = X.types)
sum_coll <- sum_coll[,c(1,5,4,2,3)]
sum_coll
# + collections summary TO DO once writing system is added
sum_coll <- langs_df_pud %>% mutate(dialect = NULL, iso_code = NULL) %>% rename(tokens = X.tokens, types = X.types)
sum_coll <- sum_coll[,c(1,5,4,2,3)] %>% arrange(family,script,language)
sum_coll
# + collections summary TO DO once writing system is added
lapply(COLLS, function(collection) {
langs_df <- if (collection == 'pud') langs_df_pud else if (collection == 'cv') langs_df_cv
sum_coll <- langs_df %>% mutate(dialect = NULL, iso_code = NULL) %>% rename(tokens = X.tokens, types = X.types)
sum_coll <- sum_coll[,c(1,5,4,2,3)] %>% arrange(family,script,language)
print(xtable(sum_coll, caption = paste0('Summary of ',collection,' collection'),
label = paste0("tab:coll_summary_",collection),type = "latex"),
file = here('latex_tables',paste0('coll_summary_',collection,".tex")),
caption.placement = "top",include.rownames=FALSE,
table.placement = getOption("xtable.table.placement", "H"))
})
# + scores for each language, collection, length_def
lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
suffix       <- paste0("_",length_def)
label_length <- switch(length_def,"meanDuration" = 'mean duration',
"medianDuration" = 'median duration', 'n_chars' = 'number of characters')
opt_df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,'.csv')))[-1]
print(xtable(opt_df, caption = paste0("CV: Optimality scores. Length is defined as ",label_length),
label = paste0("tab:opt_scores_",collection,suffix),type = "latex"),
file = here('latex_tables',paste0(collection,"_opt_scores",suffix,".tex")),
caption.placement = "top",include.rownames=FALSE,
table.placement = getOption("xtable.table.placement", "H"))
})
} else {
opt_df <- read.csv(here('results',paste0('optimality_scores_',collection,'.csv')))[-1] %>% select(-dialect)
print(xtable(opt_df, caption = "PUD: Optimality scores.",label = paste0("tab:opt_scores_",collection),type = "latex"),
file = here('latex_tables',paste0(collection,"_opt_scores.tex")),
caption.placement = "top",include.rownames=FALSE,
table.placement = getOption("xtable.table.placement", "H"))
}
})
# + scores for each language, collection, length_def
lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
suffix       <- paste0("_",length_def)
label_length <- switch(length_def,"meanDuration" = 'mean duration',
"medianDuration" = 'median duration', 'n_chars' = 'number of characters')
opt_df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,'.csv')))[-1]
print(xtable(opt_df, caption = paste0("CV: Optimality scores. Length is defined as ",label_length),
label = paste0("tab:opt_scores_",collection,suffix),type = "latex"),
file = here('latex_tables',paste0(collection,"_opt_scores",suffix,".tex")),
caption.placement = "top",include.rownames=FALSE,
table.placement = getOption("xtable.table.placement", "H"))
})
} else {
opt_df <- read.csv(here('results',paste0('optimality_scores_',collection,'.csv')))[-1]
print(xtable(opt_df, caption = "PUD: Optimality scores.",label = paste0("tab:opt_scores_",collection),type = "latex"),
file = here('latex_tables',paste0(collection,"_opt_scores.tex")),
caption.placement = "top",include.rownames=FALSE,
table.placement = getOption("xtable.table.placement", "H"))
}
})
# + summary opt scores
lapply(c('omega','eta'), function(score) {
summ <- opt_score_summary(score)
latex_score <- ifelse(score == 'omega','$\\Omega$','$\\eta$')
print(xtable(summ, caption = paste0("Summary statistics of ",latex_score," for each collection and definition of length"),
label = paste0("tab:opt_scores_summary_",score), type = "latex"),
file = here('latex_tables',paste0("opt_scores_summary_",score,".tex")),
caption.placement = "top",include.rownames=FALSE,
table.placement = getOption("xtable.table.placement", "H"), sanitize.text.function = function(x) {x})
})
# + correlogram of opt scores
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
rows_cv <- lapply(length_defs, function(length_def) {
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,'.csv')))[-1]
df <- df %>% dplyr::select(L,eta,omega)
cors <- round(cor(df), 2)
p.mat <- cor_pmat(df)
ggcorrplot(cors, type = "lower", p.mat = p.mat, lab=T, lab_size = 10, tl.cex = 20, pch.cex = 20) +
labs(title=paste(collection,length_def,sep='-')) + theme(plot.title = element_text(size=22))
ggsave(here('figures',paste0('corrplot_',collection,suffix,'.pdf')))
})
do.call(rbind,rows_cv)
} else {
length_def <- 'n_chars'
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('optimality_scores_',collection,'.csv')))[-1]
df <- df %>% dplyr::select(L,eta,omega)
cors <- round(cor(df), 2)
p.mat <- cor_pmat(df)
ggcorrplot(cors, type = "lower", p.mat = p.mat, lab=T, lab_size = 10, tl.cex = 20, pch.cex = 20) +
labs(title=paste(collection,length_def,sep='-')) + theme(plot.title = element_text(size=22))
ggsave(here('figures',paste0('corrplot_',collection,suffix,'.pdf')))
}
})
# + Omega in time vs Omega in chars
df_chars <- read.csv(here('results',paste0('optimality_scores_',collection,'_n_chars.csv')))[-1] %>%
rename(omega_space = omega) %>% dplyr::select(-Lmin,-L,-Lrand,-eta)
collection <- 'pud'
opt_df <- compute_optimality_scores(collection)
write.csv(opt_df, here('results',paste0('optimality_scores_',collection,'n_chars.csv')))
# + Omega in time vs Omega in chars
df_chars <- read.csv(here('results',paste0('optimality_scores_',collection,'_n_chars.csv')))[-1] %>%
rename(omega_space = omega) %>% dplyr::select(-Lmin,-L,-Lrand,-eta)
opt_df <- compute_optimality_scores(collection)
write.csv(opt_df, here('results',paste0('optimality_scores_',collection,'_n_chars.csv')))
tau_df <- compute_tau_corr(collection)
write.csv(tau_df, here('results',paste0('tau_correlation_',collection,'_n_chars.csv')))
# + Omega in time vs Omega in chars
df_chars <- read.csv(here('results',paste0('optimality_scores_',collection,'_n_chars.csv')))[-1] %>%
rename(omega_space = omega) %>% dplyr::select(-Lmin,-L,-Lrand,-eta)
rows_cv <- lapply(length_defs[1:2], function(length_def) {
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,'.csv')))[-1]
df %>% rename(omega_time = omega) %>% mutate(time_def = length_def)  %>% dplyr::select(-Lmin,-L,-Lrand,-eta)
})
# + Omega in time vs Omega in chars
collection <- 'cv'
df_chars <- read.csv(here('results',paste0('optimality_scores_',collection,'_n_chars.csv')))[-1] %>%
rename(omega_space = omega) %>% dplyr::select(-Lmin,-L,-Lrand,-eta)
rows_cv <- lapply(length_defs[1:2], function(length_def) {
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,'.csv')))[-1]
df %>% rename(omega_time = omega) %>% mutate(time_def = length_def)  %>% dplyr::select(-Lmin,-L,-Lrand,-eta)
})
merged_dfs <- lapply(rows_cv, function(df_time) merge(df_time,df_chars, by = c('language')))
do.call(rbind.data.frame,merged_dfs) %>%
ggplot(aes(omega_space,omega_time,label = language)) + geom_point() + facet_wrap(~time_def) +
geom_abline(intercept = 0, slope=0.5) + geom_text(nudge_x = 0.03,nudge_y = 0.02,size = 3)
ggsave(here('figures',paste0('omega_timeVSspace.pdf')))
# - 2 - tau correlation --------------------------------------------------------
## cv
collection <- 'cv'
rows_cv <- lapply(length_defs, function(length_def) {
suffix <- paste0("_",length_def)
read.csv(here('results',paste0('tau_correlation_',collection,suffix,'.csv')))[-1] %>%
mutate(length_def = length_def, language = paste0(language,ifelse(dialect=='','','-'),dialect))
})
rows_cv <- lapply(length_defs, function(length_def) {
suffix <- paste0("_",length_def)
read.csv(here('results',paste0('tau_correlation_',collection,suffix,'.csv')))[-1] %>%
mutate(length_def = length_def)
})
rows_cv
df <- do.call(rbind,rows_cv) %>% assign_stars()
ggplot(df,aes(y=language, x=length_def, fill=tau)) +
labs(x="length definition", y="language", title=paste0('Tau correlation - ',collection)) +
geom_tile() + scale_y_discrete(labels=labs) + geom_text(aes(label=stars)) +
scale_fill_gradient2(midpoint=0, low="blue",high = "red", mid = "white", na.value = "#b9d0ed")
ggsave(here('figures',paste0('cutoff_0.25_tau_significance_',collection,'.pdf')))
# DENSITY PLOT OF OMEGA AND ETA
rows <- lapply(COLLS, function(collection) {
rows <- lapply(length_defs, function(length) {
suffix <- ifelse(collection == 'pud','',paste0("_",length))
length <- ifelse(collection == 'pud','n_chars',length)
read.csv(here('results',paste0('optimality_scores_',collection,suffix,'.csv')))[-1] %>%
select(language,eta,omega) %>% mutate(collection = collection, length_def = length)
})
do.call(rbind.data.frame,rows)
})
df <- do.call(rbind.data.frame,rows) %>%
melt(id.vars = c('language','collection','length_def'))
means <- df %>% group_by(collection,length_def,variable) %>% summarise(meanvalue = mean(value))
ggplot(df) + geom_density(aes(x=value,color = length_def)) + facet_grid(rows = vars(collection), cols = vars(variable)) +
geom_vline(data=means, aes(xintercept=meanvalue, color = length_def),linetype='dashed')
ggsave(here('figures','cutoff_0.25_opt_scores_density.pdf'))
# OMEGA BARS
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
rows_cv <- lapply(length_defs, function(length_def) {
suffix       <- paste0("_",length_def)
plot_title <- paste0(collection,' - ',length_def)
opt_df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,'.csv')))[-1]
# plot 1
plot_omega(opt_df,plot_title)
ggsave(here('figures',paste0('cutoff_0.25_omega_',collection,suffix,'.pdf')))
# plot 2
plot_omega_composition(opt_df,plot_title)
ggsave(here('figures',paste0('cutoff_0.25_omega_composition_',collection,suffix,'.pdf')))
})
do.call(rbind,rows_cv)
} else if (collection == 'pud') {
length_def <- 'n_chars'
suffix       <- paste0("_",length_def)
plot_title <- paste0(collection,' - ',length_def)
df <- read.csv(here('results',paste0('optimality_scores_',collection,'.csv')))[-1]
# plot 1
plot_omega(opt_df,plot_title)
ggsave(here('figures',paste0('omega_',collection,suffix,'.pdf')))
# plot 2
plot_omega_composition(opt_df,plot_title)
ggsave(here('figures',paste0('omega_composition_',collection,suffix,'.pdf')))
}
})
# + scores for each language, collection, length_def
lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
suffix       <- paste0("_",length_def)
label_length <- switch(length_def,"meanDuration" = 'mean duration',
"medianDuration" = 'median duration', 'n_chars' = 'number of characters')
opt_df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,'.csv')))[-1]
print(xtable(opt_df, caption = paste0("CV: Optimality scores. Length is defined as ",label_length),
label = paste0("tab:opt_scores_",collection,suffix),type = "latex"),
file = here('latex_tables',paste0(collection,"_opt_scores",suffix,".tex")),
caption.placement = "top",include.rownames=FALSE,
table.placement = getOption("xtable.table.placement", "H"))
})
} else {
opt_df <- read.csv(here('results',paste0('optimality_scores_',collection,'.csv')))[-1]
print(xtable(opt_df, caption = "PUD: Optimality scores.",label = paste0("tab:opt_scores_",collection),type = "latex"),
file = here('latex_tables',paste0(collection,"_opt_scores.tex")),
caption.placement = "top",include.rownames=FALSE,
table.placement = getOption("xtable.table.placement", "H"))
}
})
# + summary opt scores
lapply(c('omega','eta'), function(score) {
summ <- opt_score_summary(score)
latex_score <- ifelse(score == 'omega','$\\Omega$','$\\eta$')
print(xtable(summ, caption = paste0("Summary statistics of ",latex_score," for each collection and definition of length"),
label = paste0("tab:opt_scores_summary_",score), type = "latex"),
file = here('latex_tables',paste0("opt_scores_summary_",score,".tex")),
caption.placement = "top",include.rownames=FALSE,
table.placement = getOption("xtable.table.placement", "H"), sanitize.text.function = function(x) {x})
})
# + correlogram of opt scores
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
rows_cv <- lapply(length_defs, function(length_def) {
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,'.csv')))[-1]
df <- df %>% dplyr::select(L,eta,omega)
cors <- round(cor(df), 2)
p.mat <- cor_pmat(df)
ggcorrplot(cors, type = "lower", p.mat = p.mat, lab=T, lab_size = 10, tl.cex = 20, pch.cex = 20) +
labs(title=paste(collection,length_def,sep='-')) + theme(plot.title = element_text(size=22))
ggsave(here('figures',paste0('cutoff_0.25_corrplot_',collection,suffix,'.pdf')))
})
do.call(rbind,rows_cv)
} else {
length_def <- 'n_chars'
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('optimality_scores_',collection,'.csv')))[-1]
df <- df %>% dplyr::select(L,eta,omega)
cors <- round(cor(df), 2)
p.mat <- cor_pmat(df)
ggcorrplot(cors, type = "lower", p.mat = p.mat, lab=T, lab_size = 10, tl.cex = 20, pch.cex = 20) +
labs(title=paste(collection,length_def,sep='-')) + theme(plot.title = element_text(size=22))
ggsave(here('figures',paste0('corrplot_',collection,suffix,'.pdf')))
}
})
# - 0 - Checks on data
# + SD AND MEAN
# global
df <- read.csv(here('results','coefficient_variation.csv'))
ggplot(sample_n(df,10000)) + geom_point(aes(meanDuration,stDevDuration))
ggplot(sample_n(df,20000)) + geom_point(aes(meanDuration,stDevDuration))
remove_at_cutoff(0.5)
View(langs_df_cv)
remove_at_cutoff(0.6)
