con <- rep(c(0,1,2),Controls)
x <- c(rep(1,sum(Cases)),
rep(0,sum(Controls)))
cas
y <- c(cas,con)
length(x)
length(y)
y
r <- cor(x,y)
r
n
A <- n*(r^2)
A
pvalue <- pchisq(A,df=1,lower.tail=FALSE)
pvalue
?pchisq
X
total.genotype.counts <- colSums(X)
total.genotype.counts
risk <- Cases/total.genotype.counts
risk
plot(c(0,1,2),risk,ylim=c(0,1),type="b",
xlab="Genotype",ylab="Risk")
# not clear if additive or dominant
# run reg to see if linear
lm1 <- lm(x~y)
summary(lm1)
abline(coefficients(lm1),lty="dotted",col="red")
X
chisq.test(X)
fisher.test(X)
X
Z <- cbind(X[,1],X[,2]+X[,3])
colnames(Z) <- c("MM","not MM")
Z
chisq.test(Z,correct=FALSE)
W <- cbind(X[,1]+X[,2],X[,3])
colnames(W) <- c("not mm","mm")
chisq.test(W)
newy <- x
newx <- y
newx
out.lm <- glm(newy~newx,
family = binomial(link = "logit"))
summary(out.lm)
table(newx)
OR <- exp(b[2])
b <- coefficients(out.lm)
b
OR <- exp(b[2])
OR
V <- vcov(out.lm)
V
se <- sqrt(diag(V))
se
ll <- b[2]-qnorm(0.975)*se[2]
ul <- b[2]+qnorm(0.975)*se[2]
ll.or <- exp(ll)
ul.or <- exp(ul)
OR
ll.or
ul.or
library(igraph)
G = erdos.renyi.game(1000, 0.05)
V(G)
infected <- sample(V(G),0.05)
nodes <- V(G)
infected
infected
nodes
infected <- sample(as.numeric(nodes),0.05)
infected
infected <- sample(nodes,0.05)
infected
infected <- sample(nodes,0.05)
infected
nodes <- as.integer(V(G))
nodes
infected <- sample(nodes,0.05)
infected
size <- nodes*0.05
infected <- sample(nodes,size)
infected
size
size <- length(nodes)*0.05
size
infected <- sample(nodes,size)
infected
ifelse(infected %in% nodes, TRUE, FALSE)
which(nodes == infected)
nodes[which(nodes == infected)]
ifelse(nodes == infected, T, F)
size
nodes
length(ifelse(nodes == infected, T, F))
vec <- ifelse(nodes == infected, T, F)
sum(vec)
infected
nodes
l <- list(1,2,3)
c <- c(1,2,3)
l
c
0.12043-((1-0.4469)*(1-0.4425))
(-0.187)^2/(0.4469*(1-0.4469)*(1-0.4425)*0.4425)
sqrt(0.5734705)
0.5734705*200
# knitr options
knitr::opts_chunk$set(echo = TRUE)
data <- fread(file = "CHD.raw")
# Install packages
# Load packages
library(data.table)
library(dplyr)
data <- fread(file = "CHD.raw")
system(plink --bfile CHD --recodeA --out CHD)
system("plink --bfile CHD --recodeA --out CHD")
expand_name <- function(name,reps) {
sapply(name, function(letter) rep(letter,reps)) %>% c()
}
expand_name('ramon',10)
require('dplyr')
expand_name <- function(name,reps) {
sapply(name, function(letter) rep(letter,reps)) %>% c()
}
expand_name('ramon',10)
strsplit('ramon')
strsplit('ramon',1)
?strsplit
strsplit('ramon','')
strsplit('ramon','') %>% unlist()
letters <- strsplit('ramon','') %>% unlist()
sapply(letters, function(letter) rep(letter,reps)) %>% c()
expand_name <- function(name,reps) {
letters <- strsplit('ramon','') %>% unlist()
sapply(letters, function(letter) rep(letter,reps)) %>% c()
}
expand_name('ramon',10)
list(r1='r1',pixels = rep(0,20))
list(r1='r1',pixels = 1:20)
list(r1='r1',pixels = 1:20,color = rep(0,20))
r1 <- list(r1='r1',pixels = 1:20,color = rep(0,20))
r1$color[5:15]
r1$color[5:15] <- 1
r1
r2$color[c(10,15)] <- 1
r2 <- list(r2='r2',pixels = 1:20,color = rep(0,20))
r2$color[c(10,15)] <- 1
r2
r3$color[c(9,11,15)] <- 1
r1 <- list(r1='r1',pixels = 1:20,color = rep(0,20))
r2 <- list(r2='r2',pixels = 1:20,color = rep(0,20))
r3 <- list(r3='r3',pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[c(10,15)] <- 1
r3$color[c(9,11,15)] <- 1
data.frame(r1,r2,r2)
list(r1,r2,r2)
big_list <- list(r1,r2,r2)
do.call(rbind.data.frame,big_list)
do.call(cbind.data.frame,big_list)
do.call(rbind,big_list)
r1 <- list(r1=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r2=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r3=rep('r3',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[c(10,15)] <- 1
r3$color[c(9,11,15)] <- 1
big_list <- list(r1,r2,r2)
do.call(rbind,big_list)
do.call(rbind.data.frame,big_list)
big_list
big_list <- list(r1,r2,r3)
do.call(rbind.data.frame,big_list)
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[c(10,15)] <- 1
r3$color[c(9,11,15)] <- 1
big_list <- list(r1,r2,r3)
do.call(rbind.data.frame,big_list)
require('ggplot2')
ggplot() + geom_tile(aes(r,pixels,fill=color))
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r3$color[c(10,15)] <- 1
big_list <- list(r1,r2,r3)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[c(10,15)] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,11,14)] <- 1
big_list <- list(r1,r2,r3)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
big_list <- list(r1,r2,r3,r4)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[c(10,15)] <- 1
r3$color[c(9,11,14)] <- 1
big_list <- list(r1,r2,r3)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r5$color[c(9,11,14)] <- 1
big_list <- list(r1,r2,r3,r4,r5)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[c(10,15)] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,11,14)] <- 1
r5$color[c(9,11,14)] <- 1
big_list <- list(r1,r2,r3,r4,r5)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(10,15)] <- 1
r5$color[c(10,15)] <- 1
r6$color[c(10,15)] <- 1
r7$color[c(9,11,14)] <- 1
r8$color[c(9,11,14)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r8$color[c(8,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(10,15)] <- 1
r5$color[c(10,15)] <- 1
r6$color[c(10,15)] <- 1
r7$color[c(9,11,14)] <- 1
r8$color[c(8,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(10,15)] <- 1
r5$color[c(10,15)] <- 1
r6$color[c(9,10,15)] <- 1
r7$color[c(8,11,14)] <- 1
r8$color[c(7,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(10,15)] <- 1
r5$color[c(9,10,15)] <- 1
r6$color[c(8,10,15)] <- 1
r7$color[c(7,11,14)] <- 1
r8$color[c(6,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,10,15)] <- 1
r5$color[c(8,10,15)] <- 1
r6$color[c(7,10,15)] <- 1
r7$color[c(6,11,14)] <- 1
r8$color[c(5,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(9,10,15)] <- 1
r4$color[c(8,10,15)] <- 1
r5$color[c(7,10,15)] <- 1
r6$color[c(6,10,15)] <- 1
r7$color[c(5,11,14)] <- 1
r8$color[c(5,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,10,15)] <- 1
r5$color[c(8,10,15)] <- 1
r6$color[c(7,10,15)] <- 1
r7$color[c(6,11,14)] <- 1
r8$color[c(5,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r9 <- list(r=rep('r9',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,10,15)] <- 1
r5$color[c(8,10,15)] <- 1
r6$color[c(7,10,15)] <- 1
r7$color[c(6,11,14)] <- 1
r8$color[c(5,12,13)] <- 1
big_list <- list(r1,r2,r3,r4,r5,r6,r7,r8,r9)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
r0 <- list(r=rep('r0',20),pixels = 1:20,color = rep(0,20))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r9 <- list(r=rep('r9',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,10,15)] <- 1
r5$color[c(8,10,15)] <- 1
r6$color[c(7,10,15)] <- 1
r7$color[c(6,11,14)] <- 1
r8$color[c(5,12,13)] <- 1
big_list <- list(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color))
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color)) + theme_minimal()
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color)) + theme_minimal() + theme(legend.position = 'none')
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color)) + theme_minimal() +
theme(legend.position = 'none',axis.title = element_blank())
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color)) + theme_minimal() +
theme(legend.position = 'none',axis.title = element_blank(), axis.text = element_blank())
r0 <- list(r=rep('r0',20),pixels = 1:20,color = rep(0,20))
r1 <- list(r=rep('r1',20),pixels = 1:20,color = rep(0,20))
r2 <- list(r=rep('r2',20),pixels = 1:20,color = rep(0,20))
r3 <- list(r=rep('r3',20),pixels = 1:20,color = rep(0,20))
r4 <- list(r=rep('r4',20),pixels = 1:20,color = rep(0,20))
r5 <- list(r=rep('r5',20),pixels = 1:20,color = rep(0,20))
r6 <- list(r=rep('r6',20),pixels = 1:20,color = rep(0,20))
r7 <- list(r=rep('r7',20),pixels = 1:20,color = rep(0,20))
r8 <- list(r=rep('r8',20),pixels = 1:20,color = rep(0,20))
r9 <- list(r=rep('r9',20),pixels = 1:20,color = rep(0,20))
r1$color[5:15] <- 1
r2$color[5:15] <- 1
r3$color[c(10,15)] <- 1
r4$color[c(9,10,15)] <- 1
r5$color[c(8,10,15)] <- 1
r6$color[c(7,10,15)] <- 1
r7$color[c(6,11,14)] <- 1
r8$color[c(5,12,13)] <- 1
big_list <- list(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9)
do.call(rbind.data.frame,big_list) %>%
ggplot() + geom_tile(aes(r,pixels,fill=color)) + theme_minimal() +
theme(legend.position = 'none',axis.title = element_blank())
library('here')
library('dplyr')
library('ISOcodes')
library('ggplot2')
require("ggrepel")
library('reshape2')
library('xtable')
library(data.table)
library(ggcorrplot)
library(pcaPP)
library(parallel)
'%!in%' <- function(x,y)!('%in%'(x,y))
read.csv(here("data/descriptive_tables/pud.csv"))
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/FIB/IQL/project/IQL-Research-Project-21-22/code/analysis")
read.csv(here("data/descriptive_tables/pud.csv"))
here()
source('R_functions.R')
getwd()
read.csv(here("data/descriptive_tables/pud.csv"))
library('here')
read.csv(here("data/descriptive_tables/pud.csv"))
read.csv(here("data/descriptive_tables/common_voice.csv"))
## cv
langs_df_cv <- read.csv(here("data/descriptive_tables/common_voice.csv")) %>% filter(iso_code %!in% c('jpn','zho')) %>%
rows_update(tibble(language = "Interlingua", iso_code = 'ina'), by = "iso_code") %>%
rows_update(tibble(family = "Conlang", iso_code = 'ina'), by = "iso_code") %>%
rows_update(tibble(family = "Conlang", iso_code = 'epo'), by = "iso_code") %>%
rows_update(tibble(language = "Oriya", iso_code = 'ori'), by = "iso_code") %>%
rows_update(tibble(language = "Modern Greek", iso_code = 'ell'), by = "iso_code") %>%
filter(dialect != 'vallader') %>%
rows_update(tibble(X.types = 9801, iso_code = 'roh'), by = "iso_code") %>%
rows_update(tibble(X.types = 44192, iso_code = 'roh'), by = "iso_code") %>%
rows_update(tibble(dialect = '', iso_code = 'roh'), by = "iso_code") %>%
langs_cv    <- langs_df_cv$language
## cv
langs_df_cv <- read.csv(here("data/descriptive_tables/common_voice.csv")) %>% filter(iso_code %!in% c('jpn','zho')) %>%
rows_update(tibble(language = "Interlingua", iso_code = 'ina'), by = "iso_code") %>%
rows_update(tibble(family = "Conlang", iso_code = 'ina'), by = "iso_code") %>%
rows_update(tibble(family = "Conlang", iso_code = 'epo'), by = "iso_code") %>%
rows_update(tibble(language = "Oriya", iso_code = 'ori'), by = "iso_code") %>%
rows_update(tibble(language = "Modern Greek", iso_code = 'ell'), by = "iso_code") %>%
filter(dialect != 'vallader') %>%
rows_update(tibble(X.types = 9801, iso_code = 'roh'), by = "iso_code") %>%
rows_update(tibble(X.types = 44192, iso_code = 'roh'), by = "iso_code") %>%
rows_update(tibble(dialect = '', iso_code = 'roh'), by = "iso_code")
library('here')
library('dplyr')
library('ISOcodes')
library('ggplot2')
require("ggrepel")
library('reshape2')
library('xtable')
library(data.table)
library(ggcorrplot)
library(pcaPP)
library(parallel)
'%!in%' <- function(x,y)!('%in%'(x,y))
# globals ----------------------------------------------------------------------
COLLS       <- c('pud','cv')
length_defs <- c('characters','medianDuration')   # 'meanDuration'
scores_labs <- c('\u03B7','\u03A8','\u03A9'); names(scores_labs) <- c('eta','psi','omega')
## cv
langs_df_cv <- read.csv(here("data/descriptive_tables/common_voice.csv")) %>% filter(iso_code %!in% c('jpn','zho')) %>%
rows_update(tibble(language = "Interlingua", iso_code = 'ina'), by = "iso_code") %>%
rows_update(tibble(family = "Conlang", iso_code = 'ina'), by = "iso_code") %>%
rows_update(tibble(family = "Conlang", iso_code = 'epo'), by = "iso_code") %>%
rows_update(tibble(language = "Oriya", iso_code = 'ori'), by = "iso_code") %>%
rows_update(tibble(language = "Modern Greek", iso_code = 'ell'), by = "iso_code") %>%
filter(dialect != 'vallader') %>%
rows_update(tibble(X.types = 9801, iso_code = 'roh'), by = "iso_code") %>%
rows_update(tibble(X.types = 44192, iso_code = 'roh'), by = "iso_code") %>%
rows_update(tibble(dialect = '', iso_code = 'roh'), by = "iso_code")
## cv
langs_df_cv <- read.csv(here("data/descriptive_tables/common_voice.csv")) %>% filter(iso_code %!in% c('jpn','zho')) %>%
rows_update(tibble(language = "Interlingua", iso_code = 'ina'), by = "iso_code") %>%
rows_update(tibble(family = "Conlang", iso_code = 'ina'), by = "iso_code") %>%
rows_update(tibble(family = "Conlang", iso_code = 'epo'), by = "iso_code") %>%
rows_update(tibble(language = "Oriya", iso_code = 'ori'), by = "iso_code") %>%
rows_update(tibble(language = "Modern Greek", iso_code = 'ell'), by = "iso_code") %>%
filter(dialect != 'vallader') %>%
rows_update(tibble(X.types = 9801, iso_code = 'roh'), by = "iso_code") %>%
rows_update(tibble(X.types = 44192, iso_code = 'roh'), by = "iso_code") %>%
rows_update(tibble(dialect = '', iso_code = 'roh'), by = "iso_code")
langs_df_cv
read.csv(here("data/descriptive_tables/pud.csv"))
