colors = switch(plot_corr, 'kendall'=corr_colors_tau, 'pearson'=corr_colors_r),
legend.title = legend_title) +
labs(title = title) +
scale_x_discrete(labels = greek_names[-1]) +
scale_y_discrete(labels = greek_names[-length(greek_names)]) +
theme(plot.title = element_text(size=20))
}
plot_correlogram(df,plot_corr,'null',HB_correct=T,6,15,18)
plot_correlogram <- function(df,plot_corr,type,HB_correct=T,lab_size,tl.cex,pch.cex) {
if ('Lrand' %in% colnames(df)) df <- df %>% rename(Lr = Lrand)
if (type == 'null')   df <- df %>% mutate(`Lmin/Lr`=Lmin/Lr) %>% dplyr::select(Lmin,Lr,`Lmin/Lr`,eta,psi,omega)
title        <- switch(type, 'scores'='Relations among scores',
'params'='Relations with parameters', 'null'='Under null hypothesis')
greek_names  <- switch(type,
'scores'=c('L','E[\u03B7]','E[\u03A8]','E[\u03A9]'),
'params'=c('n. types', 'n. tokens', 'alphabet', 'E[\u03B7]','E[\u03A8]','E[\u03A9]'),
'null'=c(bquote('L[min]'),'L',bquote('L[r]'),'E[\u03B7]','E[\u03A8]','E[\u03A9]'))
legend_title <-  switch(plot_corr, 'kendall' = '\u03C4 corr', 'pearson'='r corr')
cors  <- round(cor(df, method=plot_corr), 2)
p.mat <- cor_pmat(df, method=plot_corr)
if (HB_correct) p.mat <- HB_correction(p.mat)
ggcorrplot(cors, type = "lower", p.mat = p.mat,lab=T, lab_size = lab_size, tl.cex = tl.cex, pch.cex = pch.cex,
colors = switch(plot_corr, 'kendall'=corr_colors_tau, 'pearson'=corr_colors_r),
legend.title = legend_title) +
labs(title = title) +
scale_x_discrete(labels = greek_names[-1]) +
scale_y_discrete(labels = greek_names[-length(greek_names)]) +
theme(plot.title = element_text(size=20))
}
plot_correlogram(df,plot_corr,'null',HB_correct=T,6,15,18)
plot_correlogram <- function(df,plot_corr,type,HB_correct=T,lab_size,tl.cex,pch.cex) {
if ('Lrand' %in% colnames(df)) df <- df %>% rename(Lr = Lrand)
if (type == 'null')   df <- df %>% mutate(`Lmin/Lr`=Lmin/Lr) %>% dplyr::select(Lmin,Lr,`Lmin/Lr`,eta,psi,omega)
title        <- switch(type, 'scores'='Relations among scores',
'params'='Relations with parameters', 'null'='Under null hypothesis')
greek_names  <- switch(type,
'scores'=c('L','E[\u03B7]','E[\u03A8]','E[\u03A9]'),
'params'=c('n. types', 'n. tokens', 'alphabet', 'E[\u03B7]','E[\u03A8]','E[\u03A9]'),
'null'=c(bquote(~L[min]),'L',bquote(~L[r]),'E[\u03B7]','E[\u03A8]','E[\u03A9]'))
legend_title <-  switch(plot_corr, 'kendall' = '\u03C4 corr', 'pearson'='r corr')
cors  <- round(cor(df, method=plot_corr), 2)
p.mat <- cor_pmat(df, method=plot_corr)
if (HB_correct) p.mat <- HB_correction(p.mat)
ggcorrplot(cors, type = "lower", p.mat = p.mat,lab=T, lab_size = lab_size, tl.cex = tl.cex, pch.cex = pch.cex,
colors = switch(plot_corr, 'kendall'=corr_colors_tau, 'pearson'=corr_colors_r),
legend.title = legend_title) +
labs(title = title) +
scale_x_discrete(labels = greek_names[-1]) +
scale_y_discrete(labels = greek_names[-length(greek_names)]) +
theme(plot.title = element_text(size=20))
}
plot_correlogram(df,plot_corr,'null',HB_correct=T,6,15,18)
## correlation wit Lmin, Lr, and Lmin/Lr
remove_out <- F
lapply(c('kendall','pearson'), function(plot_corr) {
plot_corr_suffix <- paste0('_',plot_corr)
out_suffix <- ifelse(remove_out==T,'_noOut','')
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('null_hypothesis_',collection,suffix,'_',iters,corr_suffix,'.csv')))[-1]
if (remove_out == T) df <-  df %>% filter(language %!in% c('Abkhazian','Panjabi'))
plot_correlogram(df,plot_corr,'null',HB_correct=T,6,15,18)
ggsave(here('figures',paste0('corrplot_null_',collection,suffix,plot_corr_suffix,out_suffix,'.pdf')))
})
} else {
length_def <- 'characters'
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('null_hypothesis_',collection,suffix,'_',iters,corr_suffix,'.csv')))[-1]
if (remove_out == T) df <-  df %>% filter(language %!in% c('Abkhazian','Panjabi'))
plot_correlogram(df,plot_corr,'null',HB_correct=T,6,15,18)
ggsave(here('figures',paste0('corrplot_null_',collection,suffix,plot_corr_suffix,out_suffix,'.pdf')))
}
})
})
# + correlogram of opt scores
lapply(c('kendall','pearson'), function(plot_corr) {
plot_corr_suffix <- paste0('_',plot_corr)
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,corr_suffix,'.csv')))[-1] %>%
dplyr::select(L,eta,psi,omega)
plot_correlogram(df,plot_corr,'scores',HB_correct = T,8,20,25)
ggsave(here('figures',paste0('corrplot_',collection,suffix,plot_corr_suffix,'.pdf')),device = cairo_pdf)
})
} else {
length_def <- 'characters'
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,corr_suffix,'.csv')))[-1] %>%
dplyr::select(L,eta,psi,omega)
plot_correlogram(df,plot_corr,'scores',HB_correct = T,8,20,25)
ggsave(here('figures',paste0('corrplot_',collection,suffix,plot_corr_suffix,'.pdf')),device = cairo_pdf)
}
})
})
# FINDING THE BEST SCORE  --------------------------------------------------------------
# + correlation of scores with basic parameters (n tokens, n types, alphabet, L, eta, psi, omega)
lapply(COLLS, function(collection) {
params_df <- get_langs_params(collection)
lapply(c('kendall','pearson'), function(plot_corr) {
plot_corr_suffix <- paste0('_',plot_corr)
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
# data
opt_df <- read.csv(here('results',paste0('optimality_scores_',collection,'_',length_def,'_',corr_type,'.csv'))) %>%
select(language,eta,psi,omega)
df <- merge(params_df,opt_df, by='language') %>% select(-language)
# plot
plot_correlogram(df,plot_corr,'params',HB_correct=T,5,18,18)
ggsave(here('figures',paste0('corrplot_params_',collection,'_',length_def,plot_corr_suffix,'.pdf')),device = cairo_pdf)
})
} else {
length_def <- 'characters'
# data
params_df <- params_df %>% filter(language %!in% c('Japanese-strokes','Chinese-strokes'))
opt_df <- read.csv(here('results',paste0('optimality_scores_',collection,'_',length_def,'_',corr_type,'.csv'))) %>%
select(language,eta,psi,omega)
df <- merge(params_df,opt_df, by='language') %>% select(-language)
# plot
plot_correlogram(df,plot_corr,'params',HB_correct=T,5,18,18)
ggsave(here('figures',paste0('corrplot_params_',collection,'_',length_def,plot_corr_suffix,'.pdf')),device = cairo_pdf)
}
})
})
## correlation wit Lmin, Lr, and Lmin/Lr
remove_out <- F
lapply(c('kendall','pearson'), function(plot_corr) {
plot_corr_suffix <- paste0('_',plot_corr)
out_suffix <- ifelse(remove_out==T,'_noOut','')
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('null_hypothesis_',collection,suffix,'_',iters,corr_suffix,'.csv')))[-1]
if (remove_out == T) df <-  df %>% filter(language %!in% c('Abkhazian','Panjabi'))
plot_correlogram(df,plot_corr,'null',HB_correct=T,6,15,18)
ggsave(here('figures',paste0('corrplot_null_',collection,suffix,plot_corr_suffix,out_suffix,'.pdf')),device = cairo_pdf)
})
} else {
length_def <- 'characters'
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('null_hypothesis_',collection,suffix,'_',iters,corr_suffix,'.csv')))[-1]
if (remove_out == T) df <-  df %>% filter(language %!in% c('Abkhazian','Panjabi'))
plot_correlogram(df,plot_corr,'null',HB_correct=T,6,15,18)
ggsave(here('figures',paste0('corrplot_null_',collection,suffix,plot_corr_suffix,out_suffix,'.pdf')),device = cairo_pdf)
}
})
})
# + correlogram of opt scores
lapply(c('kendall','pearson'), function(plot_corr) {
plot_corr_suffix <- paste0('_',plot_corr)
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,corr_suffix,'.csv')))[-1] %>%
dplyr::select(L,eta,psi,omega)
plot_correlogram(df,plot_corr,'scores',HB_correct = T,8,20,25)
ggsave(here('figures',paste0('corrplot_',collection,suffix,plot_corr_suffix,'.pdf')),device = cairo_pdf)
})
} else {
length_def <- 'characters'
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,corr_suffix,'.csv')))[-1] %>%
dplyr::select(L,eta,psi,omega)
plot_correlogram(df,plot_corr,'scores',HB_correct = T,8,20,25)
ggsave(here('figures',paste0('corrplot_',collection,suffix,plot_corr_suffix,'.pdf')),device = cairo_pdf)
}
})
})
# E[eta] vs Lmin/E[L]
rows <- lapply(COLLS, function(collection) {
if (collection == 'pud') {
length_def <- 'characters'
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('null_hypothesis_',collection,suffix,'_',iters,corr_suffix,'.csv')))[-1]
df <- df %>% rename(`E[eta]`=eta) %>%
mutate(`Lmin/E[L]` = Lmin/L,collection = paste0(collection,'-',length_def)) %>%
select(language,`Lmin/E[L]`,`E[eta]`,collection)
} else {
rows_cv <- lapply(length_defs, function(length_def) {
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('null_hypothesis_',collection,suffix,'_',iters,corr_suffix,'.csv')))[-1]
df <- df %>% rename(`E[eta]`=eta) %>%
mutate(`Lmin/E[L]` = Lmin/L,collection = paste0(collection,'-',length_def)) %>%
select(language,`Lmin/E[L]`,`E[eta]`,collection)
})
df <- do.call(rbind,rows_cv)
}
})
df <- do.call(rbind,rows)
ggplot(df, aes(x=`Lmin/E[L]`,y=`E[eta]`,label=language)) +
labs(y = 'E[\u03B7]', x = bquote(~L[min]/'E[\u03B7]')) +
geom_abline(slope=1,intercept=0,color='purple')+
geom_point() + #geom_text(nudge_x = -0.1, nudge_y = -0.00005) +
facet_wrap(~factor(collection, levels = c('pud-characters','cv-medianDuration','cv-characters')))
ggplot(df, aes(x=`Lmin/E[L]`,y=`E[eta]`,label=language)) +
labs(y = 'E[\u03B7]', x = bquote(~L[min]/'E[L]')) +
geom_abline(slope=1,intercept=0,color='purple')+
geom_point() + #geom_text(nudge_x = -0.1, nudge_y = -0.00005) +
facet_wrap(~factor(collection, levels = c('pud-characters','cv-medianDuration','cv-characters')))
ggsave(here('figures',paste0('correlation_E[eta]_LminE[L].pdf')),device = cairo_pdf)
# PUD and CV languages  --------------------------------------------------------
common_langs <- langs_df_cv[langs_df_cv$language %in% langs_df_pud$language,]$language
common_langs
# PUD and CV languages  --------------------------------------------------------
sorted_df <- langs_df_cv %>% arrange(desc(N.tokens))
# PUD and CV languages  --------------------------------------------------------
sorted_df <- langs_df_cv %>% arrange(desc(X.tokens))
sorted_df
common_langs <- sorted_df[sorted_df$language %in% langs_df_pud$language,]$language
common_langs
k <- 4
dfs <- lapply(COLLS, function(collection) {
suffix <- '_characters'
dfs <- lapply(c('psi','omega'), function(score) {
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,corr_suffix,'.csv')))[-1] %>%
filter(language %in% common_langs[1:k])
df <- if (score == 'psi') select(df,language,psi) %>% mutate(score = 'psi') else select(df,language,omega) %>% mutate(score = 'omega')
if (score == 'psi') rename(df,value=psi)  else rename(df,value=omega)
})
df <- do.call(rbind.data.frame,dfs)
if (collection == 'cv') rename(df, cv=value ) else rename(df, pud=value )
})
df_common <- merge(dfs[[1]],dfs[[2]],by=c('language','score'))
ggplot(df_common,aes(pud,cv,label=language)) + geom_abline(intercept = 0,slope=1,color='purple')+
geom_point() + geom_text_repel(size=2) + facet_wrap(~score,scales='free')
ggplot(df_common,aes(pud,cv,label=language)) + geom_abline(intercept = 0,slope=1,color='purple')+
geom_point() + geom_text_repel(size=2) + facet_wrap(~factor(score,levels=c('psi','omega')),scales='free')
k <- 10
dfs <- lapply(COLLS, function(collection) {
suffix <- '_characters'
dfs <- lapply(c('psi','omega'), function(score) {
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,corr_suffix,'.csv')))[-1] %>%
filter(language %in% common_langs[1:k])
df <- if (score == 'psi') select(df,language,psi) %>% mutate(score = 'psi') else select(df,language,omega) %>% mutate(score = 'omega')
if (score == 'psi') rename(df,value=psi)  else rename(df,value=omega)
})
df <- do.call(rbind.data.frame,dfs)
if (collection == 'cv') rename(df, cv=value ) else rename(df, pud=value )
})
df_common <- merge(dfs[[1]],dfs[[2]],by=c('language','score'))
ggplot(df_common,aes(pud,cv,label=language)) + geom_abline(intercept = 0,slope=1,color='purple')+
geom_point() + geom_text_repel(size=2) + facet_wrap(~factor(score,levels=c('psi','omega')),scales='free')
k <- 6
dfs <- lapply(COLLS, function(collection) {
suffix <- '_characters'
dfs <- lapply(c('psi','omega'), function(score) {
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,corr_suffix,'.csv')))[-1] %>%
filter(language %in% common_langs[1:k])
df <- if (score == 'psi') select(df,language,psi) %>% mutate(score = 'psi') else select(df,language,omega) %>% mutate(score = 'omega')
if (score == 'psi') rename(df,value=psi)  else rename(df,value=omega)
})
df <- do.call(rbind.data.frame,dfs)
if (collection == 'cv') rename(df, cv=value ) else rename(df, pud=value )
})
df_common <- merge(dfs[[1]],dfs[[2]],by=c('language','score'))
ggplot(df_common,aes(pud,cv,label=language)) + geom_abline(intercept = 0,slope=1,color='purple')+
geom_point() + geom_text_repel(size=2) + facet_wrap(~factor(score,levels=c('psi','omega')),scales='free')
# + ranking correlation
sapply(c('psi','omega'), function(scoree) {
score_df <- df_common %>% filter(score == scoree) %>% arrange(pud) %>% select(pud,cv)
cor  <- cor(score_df,method='kendall')[2,1]
pval <- cor_pmat(score_df,method='kendall')[2,1]
list('cor'=cor,'pval'=pval)
})
k <- 13
dfs <- lapply(COLLS, function(collection) {
suffix <- '_characters'
dfs <- lapply(c('psi','omega'), function(score) {
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,corr_suffix,'.csv')))[-1] %>%
filter(language %in% common_langs[1:k])
df <- if (score == 'psi') select(df,language,psi) %>% mutate(score = 'psi') else select(df,language,omega) %>% mutate(score = 'omega')
if (score == 'psi') rename(df,value=psi)  else rename(df,value=omega)
})
df <- do.call(rbind.data.frame,dfs)
if (collection == 'cv') rename(df, cv=value ) else rename(df, pud=value )
})
df_common <- merge(dfs[[1]],dfs[[2]],by=c('language','score'))
ggplot(df_common,aes(pud,cv,label=language)) + geom_abline(intercept = 0,slope=1,color='purple')+
geom_point() + geom_text_repel(size=2) + facet_wrap(~factor(score,levels=c('psi','omega')),scales='free')
langs_df_cv
df_common
dfs <- lapply(COLLS, function(collection) {
suffix <- '_characters'
dfs <- lapply(c('psi','omega'), function(score) {
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,corr_suffix,'.csv')))[-1] %>%
filter(language %in% common_langs[1:k])
df <- if (score == 'psi') select(df,language,psi) %>% mutate(score = 'psi') else select(df,language,omega,family,script) %>% mutate(score = 'omega')
if (score == 'psi') rename(df,value=psi)  else rename(df,value=omega)
})
df <- do.call(rbind.data.frame,dfs)
if (collection == 'cv') rename(df, cv=value ) else rename(df, pud=value )
})
df_common <- merge(dfs[[1]],dfs[[2]],by=c('language','score'))
df_common
langs_df_cv[,c('family','script')]
df_common <- merge(df_common, langs_df_cv[,c('language','family','script')], by ='language')
df_common
ggplot(df_common,aes(pud,cv,label=language)) + geom_abline(intercept = 0,slope=1,color='purple')+
geom_point(aes(color=family)) + geom_text_repel(size=2) + facet_wrap(~factor(score,levels=c('psi','omega')),scales='free')
ggplot(df_common,aes(pud,cv,label=language)) + geom_abline(intercept = 0,slope=1,color='purple')+
geom_point(aes(color=family)) + geom_text_repel(size=2) + theme(legend.position = 'bottom')+
facet_wrap(~factor(score,levels=c('psi','omega')),scales='free')
ggplot(df_common,aes(pud,cv,label=language)) + geom_abline(intercept = 0,slope=1,color='purple')+
geom_point(aes(color=script)) + geom_text_repel(size=2) + theme(legend.position = 'bottom')+
facet_wrap(~factor(score,levels=c('psi','omega')),scales='free')
df_common
df_common <- merge(df_common, langs_df_cv[,c('language','family','script')], by ='language') %>%
mutate(equal = ifelse(family==script, 1, 0))
df_common <- merge(df_common, langs_df_cv[,c('language','family','script')], by ='language') %>%
mutate(equal = case_when(family==script ~ 1, TRUE ~ 0))
df_common
df_common$equal <- ifelse(family==script, 1, 0)
df_common$equal <- ifelse(df_common$family==df_common$script, 1, 0)
df_common
df_common <- merge(dfs[[1]],dfs[[2]],by=c('language','score'))
df_common <- merge(df_common, langs_df_cv[,c('language','family','script')], by ='language')
ggplot(df_common,aes(pud,cv,label=language)) + geom_abline(intercept = 0,slope=1,color='purple')+
geom_point(aes(color=family,shape=script)) + geom_text_repel(size=2) + theme(legend.position = 'bottom')+
facet_wrap(~factor(score,levels=c('psi','omega')),scales='free')
ggsave(here('figures',paste0('cvVSpud_groups.pdf')))
dfs <- lapply(COLLS, function(collection) {
suffix <- '_characters'
dfs <- lapply(c('psi','omega'), function(score) {
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,corr_suffix,'.csv')))[-1] %>%
filter(language %in% common_langs[1:k])
df <- if (score == 'psi') select(df,language,psi) %>% mutate(score = 'psi') else select(df,language,omega) %>% mutate(score = 'omega')
if (score == 'psi') rename(df,value=psi)  else rename(df,value=omega)
})
df <- do.call(rbind.data.frame,dfs)
if (collection == 'cv') rename(df, cv=value ) else rename(df, pud=value )
})
df_common <- merge(dfs[[1]],dfs[[2]],by=c('language','score'))
sapply(c('psi','omega'), function(scoree) {
score_df <- df_common %>% filter(score == scoree) %>% arrange(pud) %>% select(pud,cv)
cor  <- cor(score_df,method='kendall')[2,1]
pval <- cor_pmat(score_df,method='kendall')[2,1]
list('cor'=cor,'pval'=pval)
})
lapply(c('psi','omega'), function(scoree) {
score_df <- df_common %>% filter(score == scoree) %>% arrange(pud) %>% select(pud,cv)
cor  <- cor(score_df,method='kendall')[2,1]
pval <- cor_pmat(score_df,method='kendall')[2,1]
list('cor'=cor,'pval'=pval)
})
cors <- lapply(c('psi','omega'), function(scoree) {
score_df <- df_common %>% filter(score == scoree) %>% arrange(pud) %>% select(pud,cv)
cor  <- cor(score_df,method='kendall')[2,1]
pval <- cor_pmat(score_df,method='kendall')[2,1]
list('cor'=cor,'pval'=pval)
})
do.call(rbind,cors)
do.call(c,cors)
cors <- lapply(c('psi','omega'), function(scoree) {
score_df <- df_common %>% filter(score == scoree) %>% arrange(pud) %>% select(pud,cv)
cor  <- cor(score_df,method='kendall')[2,1]
pval <- cor_pmat(score_df,method='kendall')[2,1]
list(paste0('cor ',scoree)=cor,paste0('pval ',scoree)=pval)
})
do.call(c,cors)
cors <- lapply(c('psi','omega'), function(scoree) {
score_df <- df_common %>% filter(score == scoree) %>% arrange(pud) %>% select(pud,cv)
cor  <- cor(score_df,method='kendall')[2,1]
pval <- cor_pmat(score_df,method='kendall')[2,1]
l <- list('cor'=cor, 'pval'=pval)
names(l) <- c(paste0('cor',scoree),paste0('pval',scoree))
l
})
do.call(c,cors)
cors <- lapply(c('psi','omega'), function(scoree) {
score_df <- df_common %>% filter(score == scoree) %>% arrange(pud) %>% select(pud,cv)
cor  <- cor(score_df,method='kendall')[2,1]
pval <- cor_pmat(score_df,method='kendall')[2,1]
l <- list('cor'=cor, 'pval'=pval)
names(l) <- c(paste0('cor_',scoree),paste0('pval_',scoree))
l
})
do.call(c,cors)
# + ranking correlation
lapply(1:13, function(k) {
dfs <- lapply(COLLS, function(collection) {
suffix <- '_characters'
dfs <- lapply(c('psi','omega'), function(score) {
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,corr_suffix,'.csv')))[-1] %>%
filter(language %in% common_langs[1:k])
df <- if (score == 'psi') select(df,language,psi) %>% mutate(score = 'psi') else select(df,language,omega) %>% mutate(score = 'omega')
if (score == 'psi') rename(df,value=psi)  else rename(df,value=omega)
})
df <- do.call(rbind.data.frame,dfs)
if (collection == 'cv') rename(df, cv=value ) else rename(df, pud=value )
})
df_common <- merge(dfs[[1]],dfs[[2]],by=c('language','score'))
cors <- lapply(c('psi','omega'), function(scoree) {
score_df <- df_common %>% filter(score == scoree) %>% arrange(pud) %>% select(pud,cv)
cor  <- cor(score_df,method='kendall')[2,1]
pval <- cor_pmat(score_df,method='kendall')[2,1]
l <- list('cor'=cor, 'pval'=pval)
names(l) <- c(paste0('cor_',scoree),paste0('pval_',scoree))
l
})
do.call(c,cors)
})
# + ranking correlation
lapply(2:13, function(k) {
dfs <- lapply(COLLS, function(collection) {
suffix <- '_characters'
dfs <- lapply(c('psi','omega'), function(score) {
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,corr_suffix,'.csv')))[-1] %>%
filter(language %in% common_langs[1:k])
df <- if (score == 'psi') select(df,language,psi) %>% mutate(score = 'psi') else select(df,language,omega) %>% mutate(score = 'omega')
if (score == 'psi') rename(df,value=psi)  else rename(df,value=omega)
})
df <- do.call(rbind.data.frame,dfs)
if (collection == 'cv') rename(df, cv=value ) else rename(df, pud=value )
})
df_common <- merge(dfs[[1]],dfs[[2]],by=c('language','score'))
cors <- lapply(c('psi','omega'), function(scoree) {
score_df <- df_common %>% filter(score == scoree) %>% arrange(pud) %>% select(pud,cv)
cor  <- cor(score_df,method='kendall')[2,1]
pval <- cor_pmat(score_df,method='kendall')[2,1]
l <- list('cor'=cor, 'pval'=pval)
names(l) <- c(paste0('cor_',scoree),paste0('pval_',scoree))
l
})
do.call(c,cors)
})
# + ranking correlation
cors <- lapply(2:13, function(k) {
dfs <- lapply(COLLS, function(collection) {
suffix <- '_characters'
dfs <- lapply(c('psi','omega'), function(score) {
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,corr_suffix,'.csv')))[-1] %>%
filter(language %in% common_langs[1:k])
df <- if (score == 'psi') select(df,language,psi) %>% mutate(score = 'psi') else select(df,language,omega) %>% mutate(score = 'omega')
if (score == 'psi') rename(df,value=psi)  else rename(df,value=omega)
})
df <- do.call(rbind.data.frame,dfs)
if (collection == 'cv') rename(df, cv=value ) else rename(df, pud=value )
})
df_common <- merge(dfs[[1]],dfs[[2]],by=c('language','score'))
cors <- lapply(c('psi','omega'), function(scoree) {
score_df <- df_common %>% filter(score == scoree) %>% arrange(pud) %>% select(pud,cv)
cor  <- cor(score_df,method='kendall')[2,1]
pval <- cor_pmat(score_df,method='kendall')[2,1]
l <- list('cor'=cor, 'pval'=pval)
names(l) <- c(paste0('cor_',scoree),paste0('pval_',scoree))
l
})
do.call(c,cors)
})
do.call(rbind,cors)
do.call(rbind.data.frame,cors) %>% mutate(k = 2:13)
ggplot(df_common,aes(pud,cv,label=language)) + geom_abline(intercept = 0,slope=1,color='purple')+
geom_point(aes(color=family,shape=script)) + geom_text_repel(size=2) + theme(legend.position = 'bottom')+
facet_wrap(~factor(score,levels=c('psi','omega')),scales='free')+
guides(fill=guide_legend(nrow=2,byrow=TRUE))
df_common <- merge(dfs[[1]],dfs[[2]],by=c('language','score'))
df_common <- merge(df_common, langs_df_cv[,c('language','family','script')], by ='language')
ggplot(df_common,aes(pud,cv,label=language)) + geom_abline(intercept = 0,slope=1,color='purple')+
geom_point(aes(color=family,shape=script)) + geom_text_repel(size=2) + theme(legend.position = 'bottom')+
facet_wrap(~factor(score,levels=c('psi','omega')),scales='free')+
guides(fill=guide_legend(nrow=2,byrow=TRUE))
ggplot(df_common,aes(pud,cv,label=language)) + geom_abline(intercept = 0,slope=1,color='purple')+
geom_point(aes(color=family,shape=script)) + geom_text_repel(size=2) +
theme(legend.position = 'bottom')+
facet_wrap(~factor(score,levels=c('psi','omega')),scales='free')+
guides(fill=guide_legend(nrow=2,byrow=TRUE))
ggplot(df_common,aes(pud,cv,label=language)) + geom_abline(intercept = 0,slope=1,color='purple')+
geom_point(aes(color=family,shape=script)) + geom_text_repel(size=2) +
theme(legend.position = 'bottom')+
facet_wrap(~factor(score,levels=c('psi','omega')),scales='free')+
guides(color=guide_legend(nrow=2,byrow=TRUE))
ggplot(df_common,aes(pud,cv,label=language)) + geom_abline(intercept = 0,slope=1,color='purple')+
geom_point(aes(color=family,shape=script)) + geom_text_repel(size=2) +
theme(legend.position = 'bottom')+
facet_wrap(~factor(score,levels=c('psi','omega')),scales='free')+
guides(color=guide_legend(nrow=2,byrow=TRUE))
ggsave(here('figures',paste0('cvVSpud_groups.pdf')))
df_k <- do.call(rbind.data.frame,cors) %>% mutate(k = 2:13)
df_k
print(xtable(df_k, type = "latex"),
file = here('latex_tables','cvVSpud_k.tex'),
include.rownames=FALSE)
ggsave(here('figures',paste0('cvVSpud_groups.pdf')))
ggplot(df_common,aes(pud,cv,label=language)) + geom_abline(intercept = 0,slope=1,color='purple')+
geom_point(aes(color=family,shape=script)) + geom_text_repel(size=2) +
theme(legend.position = 'bottom')+
facet_wrap(~factor(score,levels=c('psi','omega')),scales='free')+
guides(color=guide_legend(nrow=2,byrow=TRUE))
ggsave(here('figures',paste0('cvVSpud_groups.pdf')))
ggplot(df_common,aes(pud,cv,label=language)) + geom_abline(intercept = 0,slope=1,color='purple')+
geom_point(aes(color=family,shape=script)) + geom_text_repel(size=3) +
theme(legend.position = 'bottom')+
facet_wrap(~factor(score,levels=c('psi','omega')),scales='free')+
guides(color=guide_legend(nrow=2,byrow=TRUE))
ggsave(here('figures',paste0('cvVSpud_groups.pdf')))
df_k <- do.call(rbind.data.frame,cors) %>% mutate(k = 2:13, min_size =sapply(sorted_df$X.tokens[2:13],min)
df_k <- do.call(rbind.data.frame,cors) %>% mutate(k = 2:13, min_size =sapply(sorted_df$X.tokens[2:13],min))
df_k <- do.call(rbind.data.frame,cors) %>% mutate(k = 2:13, min_size =sapply(sorted_df$X.tokens[2:13],min))
df_k
df_k <- do.call(rbind.data.frame,cors) %>% mutate(k = 2:13, min_size =sapply(sorted_df$X.tokens[1:13],min))
df_k <- do.call(rbind.data.frame,cors) %>% mutate(k = 2:13, min_size =sapply(sorted_df$X.tokens[2:13],min))
print(xtable(df_k, type = "latex"),
file = here('latex_tables','cvVSpud_k.tex'),
include.rownames=FALSE)
print(xtable(df_k, type = "latex"),
file = here('latex_tables','cvVSpud_k.tex'),
include.rownames=FALSE, include.colnames=FALSE, only.contents = TRUE)
