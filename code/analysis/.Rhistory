colnames(df) <- c("language","x","y","class")
cat("\n", score, "linear regression")
#print(summary(lm(y~x,df)))
cat("\nstd. error:", summary(lm(y~x,df))$coefficients[2, 2])
cat("\nR^2:", summary(lm(y~x,df))$r.squared)
cat("\n", score, "pearson correlation:",round(cor(df$x, df$y),3),"\n")
df
}
corr_type
# - 1 - Significance of word lengths
print('begin to compute correlations')
tau_df <- compute_corr("pud", corr_type = corr_type, remove_vowels=TRUE,filter=filter)
write.csv(tau_df, here(paste0('results',folder_suffix), paste0('correlation_pud_remove_vowels_.csv')))
# - 2 - Compute scores
print('begin to compute optimality scores')
opt_df <- compute_optimality_scores_coll("pud", corr_type = corr_type, remove_vowels = TRUE,filter=filter)
write.csv(opt_df, here(paste0('results',folder_suffix), paste0('optimality_scores_pud_remove_vowels.csv')))
# plot comparison
df <-rbind(form_table("eta", opt_df),
form_table("psi", opt_df),
form_table("omega", opt_df))
df$class <- factor(df$class, levels = c("eta", "psi", "omega"))
plot_score_comparison(df)
ggsave(here(paste0('figures',folder_suffix), paste0('scores_comparison_pud_',corr_type,'.pdf')),
scale = 1.5, device = cairo_pdf)
ggsave(here(paste0('figures',folder_suffix), paste0('scores_comparison_pud_kendall.pdf')),
device = cairo_pdf)
plot_score_comparison(df)
ggsave(here(paste0('figures',folder_suffix), paste0('scores_comparison_pud_kendall.pdf')),
device = cairo_pdf)
df
df %>% filter(language %!in% c('Chinese-pinyin','Japanese-romaji')) %>%
plot_score_comparison()
ggplot(df,aes(x=x,y=y,label=language)) +
facet_wrap(~class, nrow = 1, scales="free",
labeller = labeller(class=c(eta='\u03B7',psi='\u03A8',omega='\u03A9'))) +
geom_text_repel(max.overlaps=50) +
labs(y = 'new scores', x = "original scores") +
#geom_abline(slope=1,intercept=0,color='purple', size = 1,show.legend = TRUE)+
geom_point(colour="black", size=4) +
geom_smooth(method = 'lm', formula = y~x) +
stat_poly_eq(aes(label = paste(..eq.label.., sep = "~~~")),
label.x.npc = "left",
label.y.npc = 1.5,
eq.with.lhs = "italic(hat(y))~`=`~",
eq.x.rhs = "~italic(x)",
formula = y~x, parse = TRUE, size = 4, color="blue") +
geom_text_npc(mapping = aes(npcx=0.15, npcy=0.95, label="y = x"),
vjust="right", hjust="top", size = 4,
nudge_x=0.1, nudge_y=0.1, color="purple") +
theme(text = element_text(size = 20))
ggplot(df,aes(x=x,y=y,label=language)) +
facet_wrap(~class, nrow = 1, scales="free",
labeller = labeller(class=c(eta='\u03B7',psi='\u03A8',omega='\u03A9'))) +
geom_text_repel(max.overlaps=50) +
labs(y = 'new scores', x = "original scores") +
geom_abline(slope=1,intercept=0,color='purple', size = 1,show.legend = TRUE)+
geom_point(colour="black", size=4) +
geom_smooth(method = 'lm', formula = y~x) +
#stat_poly_eq(aes(label = paste(..eq.label.., sep = "~~~")),
label.x.npc = "left",
ggplot(df,aes(x=x,y=y,label=language)) +
facet_wrap(~class, nrow = 1, scales="free",
labeller = labeller(class=c(eta='\u03B7',psi='\u03A8',omega='\u03A9'))) +
geom_text_repel(max.overlaps=50) +
labs(y = 'new scores', x = "original scores") +
geom_abline(slope=1,intercept=0,color='purple', size = 1,show.legend = TRUE)+
geom_point(colour="black", size=4) +
#geom_smooth(method = 'lm', formula = y~x) +
stat_poly_eq(aes(label = paste(..eq.label.., sep = "~~~")),
label.x.npc = "left",
label.y.npc = 1.5,
eq.with.lhs = "italic(hat(y))~`=`~",
eq.x.rhs = "~italic(x)",
formula = y~x, parse = TRUE, size = 4, color="blue") +
geom_text_npc(mapping = aes(npcx=0.15, npcy=0.95, label="y = x"),
vjust="right", hjust="top", size = 4,
nudge_x=0.1, nudge_y=0.1, color="purple") +
theme(text = element_text(size = 20))
score
# PUD in chars and CV in duration
df_cv  <- read_file('opt','cv','medianDuration',filter) %>% rename(cv = psi)
df_pud <- read_file('opt','pud','characters',filter) %>%
select(-Lmin,-L,-Lrand,-eta) %>% rename(pud = psi)
score_latex <- if (score=='omega') '\u03A9'  else if (score=='psi') '\u03A8'
df <- merge(df_cv,df_pud, by = c('language')) %>% merge(langs_df_cv[,c('language','X.tokens')]) %>%
mutate(label = ifelse(abs(cv-pud)>=0.10,language,'')) %>% mutate(`T`=log10(X.tokens))
ggplot(df,aes(pud,pud,label = label,fill=`T`)) +
geom_point(colour="black",pch=21, size=4) +
geom_abline(intercept = 0, slope=1, color = 'purple') + geom_text_repel(size = 5,color='black') +
labs(x=bquote(.(score_latex)[chars]), y = bquote(.(score_latex)[dur]),
fill=expression(paste(log[10],'T'))) +
theme(text = element_text(size = 20),legend.position = 'bottom',
legend.text = element_text(size = 15),legend.title = element_text(size = 15)) +
scale_fill_gradient2(low = "red", mid = "yellow", high = "green", midpoint = 5) +
geom_smooth(method = 'lm', formula = y~x, linetype='dashed') +
stat_poly_eq(aes(label = paste(..eq.label.., sep = "~~~")),
label.x.npc = "left",label.y.npc = 1.5,
eq.with.lhs = "italic(hat(y))~`=`~",eq.x.rhs = "~italic(x)",
formula = y~x, parse = TRUE, size = 4, color="blue") +
geom_text_npc(mapping = aes(npcx=0.15, npcy=0.95, label="y = x"),
vjust="right", hjust="top", size = 4,
nudge_x=0.1, nudge_y=0.1, color="purple")
ggplot(df,aes(pud,cv,)) +
geom_point(colour="black",pch=21, size=4) +
geom_abline(intercept = 0, slope=1, color = 'purple') + geom_text_repel(size = 5,color='black') +
labs(x=bquote(.(score_latex)[chars]), y = bquote(.(score_latex)[dur])) +
theme(text = element_text(size = 20),legend.position = 'bottom',
legend.text = element_text(size = 15),legend.title = element_text(size = 15)) +
scale_fill_gradient2(low = "red", mid = "yellow", high = "green", midpoint = 5) +
geom_smooth(method = 'lm', formula = y~x, linetype='dashed') +
stat_poly_eq(aes(label = paste(..eq.label.., sep = "~~~")),
label.x.npc = "left",label.y.npc = 1.5,
eq.with.lhs = "italic(hat(y))~`=`~",eq.x.rhs = "~italic(x)",
formula = y~x, parse = TRUE, size = 4, color="blue") +
geom_text_npc(mapping = aes(npcx=0.15, npcy=0.95, label="y = x"),
vjust="right", hjust="top", size = 4,
nudge_x=0.1, nudge_y=0.1, color="purple")
ggplot(df,aes(pud,cv,label=language)) +
geom_point(colour="black",pch=21, size=4) +
geom_abline(intercept = 0, slope=1, color = 'purple') + geom_text_repel(size = 5,color='black') +
labs(x=bquote(.(score_latex)[chars]), y = bquote(.(score_latex)[dur])) +
theme(text = element_text(size = 20),legend.position = 'bottom',
legend.text = element_text(size = 15),legend.title = element_text(size = 15)) +
scale_fill_gradient2(low = "red", mid = "yellow", high = "green", midpoint = 5) +
geom_smooth(method = 'lm', formula = y~x, linetype='dashed') +
stat_poly_eq(aes(label = paste(..eq.label.., sep = "~~~")),
label.x.npc = "left",label.y.npc = 1.5,
eq.with.lhs = "italic(hat(y))~`=`~",eq.x.rhs = "~italic(x)",
formula = y~x, parse = TRUE, size = 4, color="blue") +
geom_text_npc(mapping = aes(npcx=0.15, npcy=0.95, label="y = x"),
vjust="right", hjust="top", size = 4,
nudge_x=0.1, nudge_y=0.1, color="purple")
collection
length_def
read_file('null',collection,length_def,filter,iters) %>% plot_etaVSlowerbound()
read_file('null',collection,length_def,filter=F,iters) %>% plot_etaVSlowerbound()
length_def <- 'medianDuration'
read_file('null',collection,length_def,filter=F,iters) %>% plot_etaVSlowerbound()
plot_etaVSlowerbound <- function(df) {
df <- df %>% rename(`E[eta]`=eta) %>% mutate(`Lmin/Lr` = Lmin/Lrand) %>%
select(language,`Lmin/Lr`,`E[eta]`)
ggplot(df, aes(x=`Lmin/Lr`,y=`E[eta]`,label=language)) +
labs(y = 'E[\u03B7]', x = bquote(~L[min]/L[r])) +
geom_abline(slope=1,intercept=0,color='purple')+
geom_point(size=3) + theme(text = element_text(size = 20)) +
standart_theme
}
read_file('null',collection,length_def,filter=F,iters) %>% plot_etaVSlowerbound()
# E[eta] vs theoretical lower bound
rows <- lapply(COLLS, function(collection) {
if (collection == 'pud') {
length_def <- 'characters'
suffix       <- paste0("_",length_def)
read_file('null',collection,length_def,filter=F,iters) %>% plot_etaVSlowerbound()
ggsave(here(paste0('figures',folder_suffix),paste0('E[eta]_LminLr_',collection,suffix,'.pdf')),device = cairo_pdf)
} else {
lapply(length_defs, function(length_def) {
suffix       <- paste0("_",length_def)
read_file('null',collection,length_def,filter=F,iters) %>% plot_etaVSlowerbound()
ggsave(here(paste0('figures',folder_suffix),paste0('E[eta]_LminLr_',collection,'_',length_def,'.pdf')),device = cairo_pdf)
})
}
})
# E[eta] vs theoretical lower bound
rows <- lapply(COLLS, function(collection) {
folder_suffix <- ''
if (collection == 'pud') {
length_def <- 'characters'
suffix       <- paste0("_",length_def)
read_file('null',collection,length_def,filter=F,iters) %>% plot_etaVSlowerbound()
ggsave(here(paste0('figures',folder_suffix),paste0('E[eta]_LminLr_',collection,suffix,'.pdf')),device = cairo_pdf)
} else {
lapply(length_defs, function(length_def) {
suffix       <- paste0("_",length_def)
read_file('null',collection,length_def,filter=F,iters) %>% plot_etaVSlowerbound()
ggsave(here(paste0('figures',folder_suffix),paste0('E[eta]_LminLr_',collection,'_',length_def,'.pdf')),device = cairo_pdf)
})
}
})
folder_suffix
# + correlogram of opt scores
lapply(c('kendall','pearson'), function(plot_corr) {
plot_corr_suffix <- paste0('_',plot_corr)
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
df <- read_file('opt',collection,length_def,filter) %>% select(L,eta,psi,omega)
plot_correlogram(df,plot_corr,'scores',HB_correct = T,10,22,25)
ggsave(here(paste0('figures',folder_suffix),paste0('corrplot_',collection,"_",length_def,plot_corr_suffix,'.pdf')),device = cairo_pdf)
})
} else {
length_def <- 'characters'
df <- read_file('opt',collection,length_def,filter) %>%
filter(language %!in% c('Chinese-strokes','Japanese-strokes','Chinese-pinjin','Japanese-romaji')) %>%
select(L,eta,psi,omega)
plot_correlogram(df,plot_corr,'scores',HB_correct = T,10,22,25)
ggsave(here(paste0('figures',folder_suffix),paste0('corrplot_',collection,"_",length_def,plot_corr_suffix,'.pdf')),device = cairo_pdf)
}
})
})
# FINDING THE BEST SCORE  --------------------------------------------------------------
## correlation of scores with basic parameters (n tokens, n types, alphabet, L, eta, psi, omega)
lapply(COLLS, function(collection) {
params_df <-   read.csv(here(paste0('results',folder_suffix),paste0('coll_summary_',collection,'.csv'))) %>%
select(-X,-family,-script)
lapply(c('kendall','pearson'), function(plot_corr) {
plot_corr_suffix <- paste0('_',plot_corr)
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
# data
opt_df <- read_file('opt',collection,length_def,filter) %>% select(language,eta,psi,omega)
df <- merge(params_df,opt_df, by='language') %>% select(-language)
# plot
plot_correlogram(df,plot_corr,'params',HB_correct=T,8,21,18)
ggsave(here(paste0('figures',folder_suffix),paste0('corrplot_params_',collection,'_',length_def,plot_corr_suffix,'.pdf')),device = cairo_pdf)
})
} else {
length_def <- 'characters'
# data
params_df <- params_df %>%
filter(language %!in% c('Japanese-strokes','Chinese-strokes','Chinese-pinjin','Japanese-romaji'))
opt_df <- read_file('opt',collection,length_def,filter) %>% select(language,eta,psi,omega)
df <- merge(params_df,opt_df, by='language') %>%  select(-language)
# plot
plot_correlogram(df,plot_corr,'params',HB_correct=T,8,21,18)
ggsave(here(paste0('figures',folder_suffix),paste0('corrplot_params_',collection,'_',length_def,plot_corr_suffix,'.pdf')),device = cairo_pdf)
}
})
})
## correlation wit Lmin, Lr, and Lmin/Lr
lapply(c(1000,10000,1e+05,1e+06), function(iters) {
combo_suff <- ''
folder_suffix <- ''
lapply(c('kendall','pearson'), function(plot_corr) {
plot_corr_suffix <- paste0('_',plot_corr)
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
df <- read_file('null',collection,length_def,filter=F,iters)
plot_correlogram(df,plot_corr,'null',HB_correct=T,8,22,18)
ggsave(here(paste0('figures',folder_suffix),paste0('corrplot_null_',collection,'_',length_def,'_',iters,plot_corr_suffix,combo_suff,'.pdf')),device = cairo_pdf)
})
} else {
length_def <- 'characters'
suffix       <- paste0("_",length_def)
df <- read_file('null',collection,length_def,filter=F,iters) %>%
filter(language %!in% c('Japanese-strokes','Chinese-strokes'))
plot_correlogram(df,plot_corr,'null',HB_correct=T,8,22,18)
ggsave(here(paste0('figures',folder_suffix),paste0('corrplot_null_',collection,suffix,'_',iters,plot_corr_suffix,'.pdf')),device = cairo_pdf)
}
})
})
})
# + correlogram of opt scores
lapply(c('kendall','pearson'), function(plot_corr) {
plot_corr_suffix <- paste0('_',plot_corr)
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
df <- read_file('opt',collection,length_def,filter) %>% select(L,eta,psi,omega)
plot_correlogram(df,plot_corr,'scores',HB_correct = T,10,22,25)
ggsave(here(paste0('figures',folder_suffix),paste0('corrplot_',collection,"_",length_def,plot_corr_suffix,'.pdf')),device = cairo_pdf)
})
} else {
length_def <- 'characters'
df <- read_file('opt',collection,length_def,filter) %>%
filter(language %!in% c('Chinese-strokes','Japanese-strokes')) %>%
select(L,eta,psi,omega)
plot_correlogram(df,plot_corr,'scores',HB_correct = T,10,22,25)
ggsave(here(paste0('figures',folder_suffix),paste0('corrplot_',collection,"_",length_def,plot_corr_suffix,'.pdf')),device = cairo_pdf)
}
})
})
## correlation wit Lmin, Lr, and Lmin/Lr
lapply(c(1000,10000,1e+05,1e+06), function(iters) {
combo_suff <- ''
folder_suffix <- ''
lapply(c('kendall','pearson'), function(plot_corr) {
plot_corr_suffix <- paste0('_',plot_corr)
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
df <- read_file('null',collection,length_def,filter=F,iters)
plot_correlogram(df,plot_corr,'null',HB_correct=T,8,22,18)
ggsave(here(paste0('figures',folder_suffix),paste0('corrplot_null_',collection,'_',length_def,'_',iters,plot_corr_suffix,combo_suff,'.pdf')),device = cairo_pdf)
})
} else {
length_def <- 'characters'
suffix       <- paste0("_",length_def)
df <- read_file('null',collection,length_def,filter=F,iters)
plot_correlogram(df,plot_corr,'null',HB_correct=T,8,22,18)
ggsave(here(paste0('figures',folder_suffix),paste0('corrplot_null_',collection,suffix,'_',iters,plot_corr_suffix,'.pdf')),device = cairo_pdf)
}
})
})
})
source('R_functions.R', encoding="utf-8")
# + density plots
rows <- lapply(COLLS, function(collection) {
if (collection =='cv') {
rows <- lapply(length_defs, function(length) {
length_lab <- ifelse(length=='medianDuration','duration',length)
read_file('opt',collection,length,filter) %>%
select(language,eta,psi,omega) %>% mutate(collection = toupper(collection), `length definition` = length_lab)
})
do.call(rbind.data.frame,rows)
} else if (collection =='pud') {
read_file('opt',collection,'characters',filter) %>%
select(language,eta,psi,omega) %>% mutate(collection = toupper(collection), `length definition` = 'characters') %>%
filter(language %!in% non_imm_langs)
}
})
df <- do.call(rbind.data.frame,rows)%>%
reshape2::melt(id.vars = c('language','collection','length definition'))
means <- df %>% group_by(collection,`length definition`,variable) %>% summarise(meanvalue = mean(value))
ggplot(df,aes(x=value,color = `length definition`, fill = `length definition`)) + geom_density(alpha = 0.2) +
facet_grid(rows = vars(collection), cols = vars(variable),
labeller = labeller(variable=scores_labs)) + standart_theme +
geom_vline(data=means, aes(xintercept=meanvalue, color = `length definition`),linetype='dashed') +
theme(legend.position = 'bottom') + theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=0.5))
folder_suffix
ggplot(df,aes(x=value,color = `length definition`, fill = `length definition`)) + geom_density(alpha = 0.2) +
facet_grid(rows = vars(collection), cols = vars(variable),
labeller = labeller(variable=scores_labs)) + standart_theme +
geom_vline(data=means, aes(xintercept=meanvalue, color = `length definition`),linetype='dashed') +
theme(legend.position = 'bottom') + theme(axis.text.x = element_text(angle = 30, vjust = 0.5, hjust=0.5))
ggplot(df,aes(x=value,color = `length definition`, fill = `length definition`)) + geom_density(alpha = 0.2) +
facet_grid(rows = vars(collection), cols = vars(variable),
labeller = labeller(variable=scores_labs)) + standart_theme +
geom_vline(data=means, aes(xintercept=meanvalue, color = `length definition`),linetype='dashed') +
theme(legend.position = 'bottom') + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5))
ggsave(here(paste0('figures',folder_suffix),paste0('opt_scores_density',corr_suffix,'.pdf')), device = cairo_pdf)
df <- do.call(rbind.data.frame,rows) %>% mutate(collection=factor(collection, levels=c('PUD','CV'))) %>%
reshape2::melt(id.vars = c('language','collection','length definition'))
means <- df %>% group_by(collection,`length definition`,variable) %>% summarise(meanvalue = mean(value))
ggplot(df,aes(x=value,color = `length definition`, fill = `length definition`)) + geom_density(alpha = 0.2) +
facet_grid(rows = vars(collection), cols = vars(variable),
labeller = labeller(variable=scores_labs)) + standart_theme +
geom_vline(data=means, aes(xintercept=meanvalue, color = `length definition`),linetype='dashed') +
theme(legend.position = 'bottom') + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5))
ggsave(here(paste0('figures',folder_suffix),paste0('opt_scores_density',corr_suffix,'.pdf')), device = cairo_pdf)
# - 2 - Compute scores
print('begin to compute optimality scores')
opt_df <- compute_optimality_scores_coll("pud", corr_type = corr_type, remove_vowels = TRUE,filter=filter)
# plot comparison
df <-rbind(form_table("eta", opt_df),
form_table("psi", opt_df),
form_table("omega", opt_df))
df$class <- factor(df$class, levels = c("eta", "psi", "omega"))
plot_score_comparison(df)
opt_df
form_table("eta", opt_df)
ggplot(df,aes(x=x,y=y,label=language)) +
#facet_wrap(~class, nrow = 1, scales="free",
#           labeller = labeller(class=c(eta='\u03B7',psi='\u03A8',omega='\u03A9'))) +
geom_text_repel(max.overlaps=50) +
labs(y = 'new scores', x = "original scores") +
geom_abline(slope=1,intercept=0,color='purple', size = 1,show.legend = TRUE)+
geom_point(colour="black", size=4) +
geom_smooth(method = 'lm', formula = y~x) +
stat_poly_eq(aes(label = paste(..eq.label.., sep = "~~~")),
label.x.npc = "left",
label.y.npc = 1.5,
eq.with.lhs = "italic(hat(y))~`=`~",
eq.x.rhs = "~italic(x)",
formula = y~x, parse = TRUE, size = 4, color="blue") +
geom_text_npc(mapping = aes(npcx=0.15, npcy=0.95, label="y = x"),
vjust="right", hjust="top", size = 4,
nudge_x=0.1, nudge_y=0.1, color="purple") +
theme(text = element_text(size = 20))
score_lab <- switch(score, eta='\u03B7',psi='\u03A8',omega='\u03A9')
score <- 'eta'
score_lab <- switch(score, eta='\u03B7',psi='\u03A8',omega='\u03A9')
df <- form_table(score, opt_df)
score_lab <- switch(score, eta='\u03B7',psi='\u03A8',omega='\u03A9')
score_lab
ggplot(df,aes(x=x,y=y,label=language)) +
#facet_wrap(~class, nrow = 1, scales="free",
#           labeller = labeller(class=c(eta='\u03B7',psi='\u03A8',omega='\u03A9'))) +
geom_text_repel(max.overlaps=50) +
labs(y = paste('new',score_lab), x = paste('original',score_lab)) +
geom_abline(slope=1,intercept=0,color='purple', size = 1,show.legend = TRUE)+
geom_point(colour="black", size=4) +
geom_smooth(method = 'lm', formula = y~x) +
stat_poly_eq(aes(label = paste(..eq.label.., sep = "~~~")),
label.x.npc = "left",
label.y.npc = 1.5,
eq.with.lhs = "italic(hat(y))~`=`~",
eq.x.rhs = "~italic(x)",
formula = y~x, parse = TRUE, size = 4, color="blue") +
geom_text_npc(mapping = aes(npcx=0.15, npcy=0.95, label="y = x"),
vjust="right", hjust="top", size = 4,
nudge_x=0.1, nudge_y=0.1, color="purple") +
theme(text = element_text(size = 20))
plot_score_comparison <- function(opt_df, score) {
df <- form_table(score, opt_df)
score_lab <- switch(score, eta='\u03B7',psi='\u03A8',omega='\u03A9')
ggplot(df,aes(x=x,y=y,label=language)) +
geom_text_repel(max.overlaps=50) +
labs(y = paste('new',score_lab), x = paste('original',score_lab)) +
geom_abline(slope=1,intercept=0,color='purple', size = 1,show.legend = TRUE)+
geom_point(colour="black", size=4) +
geom_smooth(method = 'lm', formula = y~x) +
stat_poly_eq(aes(label = paste(..eq.label.., sep = "~~~")),
label.x.npc = "left",
label.y.npc = 1.5,
eq.with.lhs = "italic(hat(y))~`=`~",
eq.x.rhs = "~italic(x)",
formula = y~x, parse = TRUE, size = 4, color="blue") +
geom_text_npc(mapping = aes(npcx=0.15, npcy=0.95, label="y = x"),
vjust="right", hjust="top", size = 4,
nudge_x=0.1, nudge_y=0.1, color="purple") +
theme(text = element_text(size = 20))
}
# plot comparison
lapply(c('eta','psi','omega'), function(score) {
plot_score_comparison(opt_df,score)
ggsave(here(paste0('figures',folder_suffix), paste0('scores_comparison_',score,'.pdf')),
device = cairo_pdf)
})
# plot comparison
lapply(c('eta','psi','omega'), function(score) {
plot_score_comparison(opt_df,score)
ggsave(here(paste0('figures',folder_suffix), paste0('scores_comparison_',score,'.pdf')),
device = cairo_pdf)
})
# plot comparison
lapply(c('eta','psi','omega'), function(score) {
plot_score_comparison(opt_df,score)
ggsave(here(paste0('figures',folder_suffix), paste0('scores_comparison_',score,'.pdf')),
device = cairo_pdf)
})
# + correlogram of opt scores
lapply(c('kendall','pearson'), function(plot_corr) {
plot_corr_suffix <- paste0('_',plot_corr)
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
df <- read_file('opt',collection,length_def,filter) %>% select(L,eta,psi,omega)
plot_correlogram(df,plot_corr,'scores',HB_correct = T,10,22,25)
ggsave(here(paste0('figures',folder_suffix),paste0('corrplot_',collection,"_",length_def,plot_corr_suffix,'.pdf')),device = cairo_pdf)
})
} else {
length_def <- 'characters'
df <- read_file('opt',collection,length_def,filter) %>%
filter(language %!in% c('Chinese-strokes','Japanese-strokes')) %>%
select(L,eta,psi,omega)
plot_correlogram(df,plot_corr,'scores',HB_correct = T,10,22,25)
ggsave(here(paste0('figures',folder_suffix),paste0('corrplot_',collection,"_",length_def,plot_corr_suffix,'.pdf')),device = cairo_pdf)
}
})
})
COLLS
# FINDING THE BEST SCORE  --------------------------------------------------------------
## correlation of scores with basic parameters (n tokens, n types, alphabet, L, eta, psi, omega)
lapply(COLLS, function(collection) {
params_df <-   read.csv(here(paste0('results',folder_suffix),paste0('coll_summary_',collection,'.csv'))) %>%
select(-X,-family,-script)
lapply(c('kendall','pearson'), function(plot_corr) {
plot_corr_suffix <- paste0('_',plot_corr)
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
# data
opt_df <- read_file('opt',collection,length_def,filter) %>% select(language,eta,psi,omega)
df <- merge(params_df,opt_df, by='language') %>% select(-language)
# plot
plot_correlogram(df,plot_corr,'params',HB_correct=T,8,21,18)
ggsave(here(paste0('figures',folder_suffix),paste0('corrplot_params_',collection,'_',length_def,plot_corr_suffix,'.pdf')),device = cairo_pdf)
})
} else {
length_def <- 'characters'
# data
params_df <- params_df %>%
filter(language %!in% c('Japanese-strokes','Chinese-strokes','Chinese-pinjin','Japanese-romaji'))
opt_df <- read_file('opt',collection,length_def,filter) %>% select(language,eta,psi,omega)
df <- merge(params_df,opt_df, by='language') %>%  select(-language)
# plot
plot_correlogram(df,plot_corr,'params',HB_correct=T,8,21,18)
ggsave(here(paste0('figures',folder_suffix),paste0('corrplot_params_',collection,'_',length_def,plot_corr_suffix,'.pdf')),device = cairo_pdf)
}
})
})
## correlation wit Lmin, Lr, and Lmin/Lr
lapply(c(1e+06), function(iters) {
combo_suff <- ''
folder_suffix <- ''
lapply(c('kendall','pearson'), function(plot_corr) {
plot_corr_suffix <- paste0('_',plot_corr)
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
df <- read_file('null',collection,length_def,filter=F,iters)
plot_correlogram(df,plot_corr,'null',HB_correct=T,8,22,18)
ggsave(here(paste0('figures',folder_suffix),paste0('corrplot_null_',collection,'_',length_def,'_',iters,plot_corr_suffix,combo_suff,'.pdf')),device = cairo_pdf)
})
} else {
length_def <- 'characters'
suffix       <- paste0("_",length_def)
df <- read_file('null',collection,length_def,filter=F,iters)
plot_correlogram(df,plot_corr,'null',HB_correct=T,8,22,18)
ggsave(here(paste0('figures',folder_suffix),paste0('corrplot_null_',collection,suffix,'_',iters,plot_corr_suffix,'.pdf')),device = cairo_pdf)
}
})
})
})
(86.48-14)/2
48.48-36.24
86.48-48.48
108.28-59.09
# lennart
10 + 10 + 19.33  + 68
