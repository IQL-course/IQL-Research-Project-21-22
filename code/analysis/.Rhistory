df <- read.csv(here('results',paste0('correlation_',collection,suffix,corr_suffix,'.csv')))[-1]
length_def <- ifelse(length_def=='medianDuration','duration',length_def)
df$length_def <- length_def
df
})
df <- do.call(rbind,rows_cv)
plot_corr_significance(df,corr_type)
ggsave(here('figures',paste0('corr_significance_',collection,corr_suffix,'.pdf')))
## pud
collection <- 'pud'
df <- read.csv(here('results',paste0('correlation_',collection,'_characters',corr_suffix,'.csv')))[-1] %>%
mutate(length_def = 'characters')
plot_corr_significance(df,corr_type)
ggsave(here('figures',paste0('corr_significance_',collection,corr_suffix,'.pdf')))
})
# - 2 - correlation significance --------------------------------------------------------
lapply(c('kendall','pearson'), function(corr_type) {
corr_suffix <- paste0('_',corr_type)
## cv
collection <- 'cv'
rows_cv <- lapply(length_defs, function(length_def) {
suffix <- paste0("_",length_def)
df <- read.csv(here('results',paste0('correlation_',collection,suffix,corr_suffix,'.csv')))[-1]
length_def <- ifelse(length_def=='medianDuration','duration',length_def)
df$length_def <- length_def
df
})
df <- do.call(rbind,rows_cv)
plot_corr_significance(df,corr_type)
ggsave(here('figures',paste0('corr_significance_',collection,corr_suffix,'.pdf')))
## pud
collection <- 'pud'
df <- read.csv(here('results',paste0('correlation_',collection,'_characters',corr_suffix,'.csv')))[-1] %>%
mutate(length_def = 'characters')
plot_corr_significance(df,corr_type)
ggsave(here('figures',paste0('corr_significance_',collection,corr_suffix,'.pdf')))
})
suffix <- '_characters'
# + convergence of scores TO REDO IN REPORT
collection <- 'pud'
scores_df <- read.csv(here('results',paste0('scores_convergence_',collection,suffix,'.csv')))[-1]  %>%
mutate(t = rep(sample_sizes,length(languages)))
sample_sizes <- c(2^seq(3,23))
languages <- if (collection=='pud') langs_df_pud$language else langs_df_cv$language
scores_df <- read.csv(here('results',paste0('scores_convergence_',collection,suffix,'.csv')))[-1]  %>%
mutate(t = rep(sample_sizes,length(languages)))
melt_df   <- reshape2::melt(scores_df, id.vars=c('language','t')) %>%
rename(score = value)
ggplot(melt_df) + geom_line(aes(`t`,score,color=variable)) +
facet_wrap(~language) + geom_hline(yintercept=0,linetype='dashed',color='purple') +
theme(strip.text = element_text(size = 8)) + theme(legend.position = 'bottom') +
guides(color=guide_legend(title="score",nrow = 1)) +
scale_color_discrete(labels=c('\u03B7','\u03A8','\u03A9')) +
scale_x_log10(breaks = scales::trans_breaks("log10", function(x) 10^as.integer(x)),
labels=scales::trans_format('log10',scales::math_format(10^.x)))
melt_df   <- reshape2::melt(scores_df, id.vars=c('language','t')) %>%
rename(score = value) %>% na.omit()
ggplot(melt_df) + geom_line(aes(`t`,score,color=variable)) +
facet_wrap(~language) + geom_hline(yintercept=0,linetype='dashed',color='purple') +
theme(strip.text = element_text(size = 8)) + theme(legend.position = 'bottom') +
guides(color=guide_legend(title="score",nrow = 1)) +
scale_color_discrete(labels=c('\u03B7','\u03A8','\u03A9')) +
scale_x_log10(breaks = scales::trans_breaks("log10", function(x) 10^as.integer(x)),
labels=scales::trans_format('log10',scales::math_format(10^.x)))
suffix
ggsave(here('figures',paste0('convergence_',collection,suffix,'.pdf')),device = cairo_pdf)
collection
params_df <-   read.csv(here('results',paste0('coll_summary_',collection,'.csv'))) %>%
select(-X,-family,-script)
plot_corr <- 'kendall'
plot_corr_suffix <- paste0('_',plot_corr)
length_def <- 'characters'
# data
params_df <- params_df %>% filter(language %!in% c('Japanese-strokes','Chinese-strokes'))
opt_df <- read.csv(here('results',paste0('optimality_scores_',collection,'_',length_def,'_',corr_type,'.csv'))) %>%
select(language,eta,psi,omega)
df <- merge(params_df,opt_df, by='language') %>% select(-language)
# plot
plot_correlogram(df,plot_corr,'params',HB_correct=T,5,18,18)
# plot
plot_correlogram(df,plot_corr,'params',HB_correct=T,8,18,18)
warnings()
# plot
plot_correlogram(df,plot_corr,'params',HB_correct=T,8,20,18)
# FINDING THE BEST SCORE  --------------------------------------------------------------
# + correlation of scores with basic parameters (n tokens, n types, alphabet, L, eta, psi, omega)
lapply(COLLS, function(collection) {
params_df <-   read.csv(here('results',paste0('coll_summary_',collection,'.csv'))) %>%
select(-X,-family,-script)
lapply(c('kendall','pearson'), function(plot_corr) {
plot_corr_suffix <- paste0('_',plot_corr)
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
# data
opt_df <- read.csv(here('results',paste0('optimality_scores_',collection,'_',length_def,'_',corr_type,'.csv'))) %>%
select(language,eta,psi,omega)
df <- merge(params_df,opt_df, by='language') %>% select(-language)
# plot
plot_correlogram(df,plot_corr,'params',HB_correct=T,8,21,18)
ggsave(here('figures',paste0('corrplot_params_',collection,'_',length_def,plot_corr_suffix,'.pdf')),device = cairo_pdf)
})
} else {
length_def <- 'characters'
# data
params_df <- params_df %>% filter(language %!in% c('Japanese-strokes','Chinese-strokes'))
opt_df <- read.csv(here('results',paste0('optimality_scores_',collection,'_',length_def,'_',corr_type,'.csv'))) %>%
select(language,eta,psi,omega)
df <- merge(params_df,opt_df, by='language') %>% select(-language)
# plot
plot_correlogram(df,plot_corr,'params',HB_correct=T,8,21,18)
ggsave(here('figures',paste0('corrplot_params_',collection,'_',length_def,plot_corr_suffix,'.pdf')),device = cairo_pdf)
}
})
})
plot_corr_suffix <- paste0('_',plot_corr)
length_def <- 'characters'
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,corr_suffix,'.csv')))[-1] %>%
dplyr::select(L,eta,psi,omega)
plot_correlogram(df,plot_corr,'scores',HB_correct = T,8,20,25)
plot_correlogram(df,plot_corr,'scores',HB_correct = T,8,22,25)
# + correlogram of opt scores
lapply(c('kendall','pearson'), function(plot_corr) {
plot_corr_suffix <- paste0('_',plot_corr)
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,corr_suffix,'.csv')))[-1] %>%
dplyr::select(L,eta,psi,omega)
plot_correlogram(df,plot_corr,'scores',HB_correct = T,8,22,25)
ggsave(here('figures',paste0('corrplot_',collection,suffix,plot_corr_suffix,'.pdf')),device = cairo_pdf)
})
} else {
length_def <- 'characters'
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,corr_suffix,'.csv')))[-1] %>%
dplyr::select(L,eta,psi,omega)
plot_correlogram(df,plot_corr,'scores',HB_correct = T,8,22,25)
ggsave(here('figures',paste0('corrplot_',collection,suffix,plot_corr_suffix,'.pdf')),device = cairo_pdf)
}
})
})
plot_correlogram(df,plot_corr,'scores',HB_correct = T,10,22,25)
# + correlogram of opt scores
lapply(c('kendall','pearson'), function(plot_corr) {
plot_corr_suffix <- paste0('_',plot_corr)
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,corr_suffix,'.csv')))[-1] %>%
dplyr::select(L,eta,psi,omega)
plot_correlogram(df,plot_corr,'scores',HB_correct = T,10,22,25)
ggsave(here('figures',paste0('corrplot_',collection,suffix,plot_corr_suffix,'.pdf')),device = cairo_pdf)
})
} else {
length_def <- 'characters'
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('optimality_scores_',collection,suffix,corr_suffix,'.csv')))[-1] %>%
dplyr::select(L,eta,psi,omega)
plot_correlogram(df,plot_corr,'scores',HB_correct = T,10,22,25)
ggsave(here('figures',paste0('corrplot_',collection,suffix,plot_corr_suffix,'.pdf')),device = cairo_pdf)
}
})
})
# NULL HYPOTHESYS --------------------------------------------------------------
iters <- 1e06
## correlation wit Lmin, Lr, and Lmin/Lr
remove_out <- F
lapply(c('kendall','pearson'), function(plot_corr) {
plot_corr_suffix <- paste0('_',plot_corr)
out_suffix <- ifelse(remove_out==T,'_noOut','')
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('null_hypothesis_',collection,suffix,'_',iters,corr_suffix,'.csv')))[-1]
if (remove_out == T) df <-  df %>% filter(language %!in% c('Panjabi'))
plot_correlogram(df,plot_corr,'null',HB_correct=T,8,22,18)
ggsave(here('figures',paste0('corrplot_null_',collection,suffix,'_',iters,plot_corr_suffix,out_suffix,'.pdf')),device = cairo_pdf)
})
} else {
length_def <- 'characters'
suffix       <- paste0("_",length_def)
df <- read.csv(here('results',paste0('null_hypothesis_',collection,suffix,'_',iters,corr_suffix,'.csv')))[-1]
if (remove_out == T) df <-  df %>% filter(language %!in% c('Abkhazian','Panjabi'))
plot_correlogram(df,plot_corr,'null',HB_correct=T,8,22,18)
ggsave(here('figures',paste0('corrplot_null_',collection,suffix,'_',iters,plot_corr_suffix,out_suffix,'.pdf')),device = cairo_pdf)
}
})
})
collection
language <- 'Italian'
df       <- read_language(language,collection)
words    <- if ('romanized_form' %in% colnames(df)) tolower(df$romanized_form) else df$word
unique(unlist(strsplit(words, '')))
source('R_functions.R')
df       <- read_language(language,collection)
words    <- if ('romanized_form' %in% colnames(df)) tolower(df$romanized_form) else df$word
unique(unlist(strsplit(words, '')))
# + alphabet sizes
lapply(COLLS,function(collection) {
langs_df <- if (collection == 'pud') langs_df_pud else if (collection == 'cv') langs_df_cv
parameters <- lapply(langs_df$language, function(language) {
df       <- read_language(language,collection)
words    <- if ('romanized_form' %in% colnames(df)) tolower(df$romanized_form) else df$word
alphabet_size <- unique(unlist(strsplit(words, ''))) %>% length()
list("language"=language, 'A'=alphabet_size)
})
df = do.call(rbind.data.frame,parameters)
write.csv(df, here('results',paste0('alphabet_sisez_',collection,'.csv')))
})
# + collections summary
lapply(COLLS, function(collection) {
langs_df <- if (collection == 'pud') langs_df_pud else if (collection == 'cv') langs_df_cv
sum_coll <- langs_df %>% mutate(dialect = NULL, iso_code = NULL) %>% rename(T = X.tokens, n = X.types)
A_coll   <- read.csv(here('results',paste0('alphabet_sisez_',collection,'.csv')))
sum_coll$A <- A_coll$A
sum_coll <- sum_coll[,c('language','family','script','A','n','T')] %>%
arrange(family,script,language)
write.csv(sum_coll,here('results',paste0('coll_summary_',collection,'.csv')))
print(xtable(sum_coll, type = "latex"),
file = here('latex_tables',paste0('coll_summary_',collection,".tex")),
include.rownames=FALSE,include.colnames=FALSE, only.contents = TRUE,
hline.after = c(nrow(sum_coll)))
})
language
df       <- read_language(language,collection)
words    <- if ('romanized_form' %in% colnames(df)) tolower(df$romanized_form) else df$word
alphabet_size <- unique(unlist(strsplit(words, ''))) %>% length()
unique(unlist(strsplit(words, '')))
unique(unlist(strsplit(words, ''))) %>% length()
language <- 'Chinese-strokes'
collection
df       <- read_language(language,collection)
words    <- if ('romanized_form' %in% colnames(df)) tolower(df$romanized_form) else df$word
unique(unlist(strsplit(words, '')))
language <- 'Chinese-pinyin'
df       <- read_language(language,collection)
words    <- if ('romanized_form' %in% colnames(df)) tolower(df$romanized_form) else df$word
unique(unlist(strsplit(words, '')))
language <- 'French'
collection <- 'cv'
df       <- read_language(language,collection)
words    <- if ('romanized_form' %in% colnames(df)) tolower(df$romanized_form) else df$word
alphabet <- unique(unlist(strsplit(words, '')))
unlist(strsplit(words, ''))
table(unlist(strsplit(words, '')))
table(unlist(strsplit(words, '')))/length(unlist(strsplit(words, ''))) %>% sort()
table(unlist(strsplit(words, '')))/length(words) %>% sort
table(unlist(strsplit(words, '')))/length(words) %>% sort()
alphabet <- unique(unlist(strsplit(words, '')))
alphabet
language <- 'Italian'
df       <- read_language(language,collection)
words    <- if ('romanized_form' %in% colnames(df)) tolower(df$romanized_form) else df$word
alphabet <- unique(unlist(strsplit(words, '')))
alphabet
df_ab <- data.frame('freq'=table(unlist(strsplit(words, ''))))
df_ab
df_ab <- data.frame('freq'=table(unlist(strsplit(words, '')))) %>% arrange(freq)
df_ab <- data.frame(table(unlist(strsplit(words, '')))) %>% arrange(freq)
df_ab <- data.frame(table(unlist(strsplit(words, '')))) %>% arrange(Freq)
df_ab
df_ab <- data.frame(table(unlist(strsplit(words, '')))) %>%
mutate(rel=Freq/nrow(.)) %>% arrange(Freq)
df_ab
df_ab <- data.frame(table(unlist(strsplit(words, '')))) %>%
mutate(rel=Freq/nrow(.)) %>% arrange(desc(Freq))
df_ab
df_ab <- data.frame(table(unlist(strsplit(words, '')))) %>%
mutate(rel=Freq/nrow(.)) %>% arrange(desc(Freq))
df_ab
library(cluster)
kmeans(df_ab$Freq, centers = 2, nstart = 10)
kmeans(df_ab$Freq, centers = 2, nstart = 10)$cluster
df_ab$group <- kmeans(df_ab$Freq, centers = 2, nstart = 10)$cluster
df_ab
df_ab$group <- kmeans(df_ab$rel, centers = 2, nstart = 10)$cluster
df_ab
df_ab <- data.frame(table(unlist(strsplit(words, '')))) %>%
mutate(Freq=log10(Freq)) %>% arrange(desc(Freq))
df_ab$group <- kmeans(df_ab$Freq, centers = 2, nstart = 10)$cluster
df_ab
language <- 'French'
collection
df       <- read_language(language,collection)
words    <- if ('romanized_form' %in% colnames(df)) tolower(df$romanized_form) else df$word
df_ab <- data.frame(table(unlist(strsplit(words, '')))) %>%
mutate(Freq=log10(Freq)) %>% arrange(desc(Freq))
df_ab$group <- kmeans(df_ab$Freq, centers = 2, nstart = 10)$cluster
df_ab
install.packages('Ckmeans.1d.dp')
library(Ckmeans.1d.dp)
Ckmeans.1d.dp(df_ab$Freq, 2)
df_ab$group_opt <- Ckmeans.1d.dp(df_ab$Freq, 2)
df_ab$group_opt <- Ckmeans.1d.dp(df_ab$Freq, 2)$cluster
df_ab
df_ab %>% mutate(Freq_diff = Freq - lag(Freq, default = Freq[1]))
language <- 'English'
df       <- read_language(language,collection)
words    <- if ('romanized_form' %in% colnames(df)) tolower(df$romanized_form) else df$word
df_ab <- data.frame(table(unlist(strsplit(words, '')))) %>%
mutate(Freq=log10(Freq)) %>% arrange(desc(Freq))
df_ab$group <- kmeans(df_ab$Freq, centers = 2, nstart = 10)$cluster
df_ab$group_opt <- Ckmeans.1d.dp(df_ab$Freq, 2)$cluster
df_ab
language <- 'Italian'
df       <- read_language(language,collection)
words    <- if ('romanized_form' %in% colnames(df)) tolower(df$romanized_form) else df$word
df_ab <- data.frame(table(unlist(strsplit(words, '')))) %>%
mutate(Freq=log10(Freq)) %>% arrange(desc(Freq))
df_ab$group <- kmeans(df_ab$Freq, centers = 2, nstart = 10)$cluster
df_ab$group_opt <- Ckmeans.1d.dp(df_ab$Freq, 2)$cluster
df_ab
language <- 'Russian'
df       <- read_language(language,collection)
words    <- if ('romanized_form' %in% colnames(df)) tolower(df$romanized_form) else df$word
df_ab <- data.frame(table(unlist(strsplit(words, '')))) %>%
mutate(Freq=log10(Freq)) %>% arrange(desc(Freq))
df_ab$group <- kmeans(df_ab$Freq, centers = 2, nstart = 10)$cluster
df_ab$group_opt <- Ckmeans.1d.dp(df_ab$Freq, 2)$cluster
df_ab
language <- 'Spanish'
df       <- read_language(language,collection)
words    <- if ('romanized_form' %in% colnames(df)) tolower(df$romanized_form) else df$word
df_ab <- data.frame(table(unlist(strsplit(words, '')))) %>%
mutate(Freq=log10(Freq)) %>% arrange(desc(Freq))
df_ab$group <- kmeans(df_ab$Freq, centers = 2, nstart = 10)$cluster
df_ab$group_opt <- Ckmeans.1d.dp(df_ab$Freq, 2)$cluster
df_ab
iso_code <- 'ita'
df <- read.csv(here('code/preprocessing/',collection,'/characters/',iso_code,'-character.csv')) %>%
mutate(Freq=log10(Freq)) %>% arrange(desc(Freq))
df <- read.csv(here('code/preprocessing/',paste0(collection,'/characters/',iso_code,'-character.csv'))) %>%
mutate(Freq=log10(Freq)) %>% arrange(desc(Freq))
read.csv(here('code/preprocessing/',paste0(collection,'/characters/',iso_code,'-character.csv')))
df <- read.csv(here('code/preprocessing/',paste0(collection,'/characters/',iso_code,'-character.csv'))) %>%
mutate(Freq=log10(frequencyTot)) %>% arrange(desc(Freq))
df_ab$group <- kmeans(df_ab$Freq, centers = 2, nstart = 10)$cluster
df_ab$group_opt <- Ckmeans.1d.dp(df_ab$Freq, 2)$cluster
df <- read.csv(here('code/preprocessing/',paste0(collection,'/characters/',iso_code,'-character.csv'))) %>%
mutate(Freq=log10(frequencyTot)) %>% arrange(desc(Freq))
df$group <- kmeans(df_ab$Freq, centers = 2, nstart = 10)$cluster
df <- read.csv(here('code/preprocessing/',paste0(collection,'/characters/',iso_code,'-character.csv'))) %>%
mutate(Freq=log10(frequencyTot)) %>% arrange(desc(Freq))
df$group <- kmeans(df$Freq, centers = 2, nstart = 10)$cluster
df$group_opt <- Ckmeans.1d.dp(df$Freq, 2)$cluster
df
df <- read.csv(here('code/preprocessing/',paste0(collection,'/characters/',iso_code,'-character.csv'))) %>%
mutate(Freq=log10(frequencyTot)) %>% arrange(desc(Freq))
df$group_opt <- Ckmeans.1d.dp(df$Freq, 2)$cluster
df
df <- df %>% filter(group_opt == 2)
df
alphabet <- df$character
alphabet
write.csv(alphabet, here('data/alphabets',paste0(collection,'/alphabet_',iso_code,'.txt')))
write(alphabet, here('data/alphabets',paste0(collection,'/alphabet_',iso_code,'.txt')))
lapply(COLLS,function(collection) {
iso_codes <- if (collection == 'pud') langs_df_pud$iso_code else if (collection == 'cv') langs_df_cv$iso_code
lapply(iso_codes, function(iso_code) {
df <- read.csv(here('code/preprocessing/',paste0(collection,'/characters/',iso_code,'-character.csv'))) %>%
mutate(Freq=log10(frequencyTot)) %>% arrange(desc(Freq))
df$group_opt <- Ckmeans.1d.dp(df$Freq, 2)$cluster
df <- df %>% filter(group_opt == 2)
alphabet <- df$character
write(alphabet, here('data/alphabets',paste0(collection,'/alphabet_',iso_code,'.txt')))
})
})
source('R_functions.R')
# + convergence of scores TO REDO IN REPORT
collection <- 'cv'
suffix <- '_characters'
sample_sizes <- c(2^seq(3,23))
languages <- if (collection=='pud') langs_df_pud$language else langs_df_cv$language
scores_df <- read.csv(here('results',paste0('scores_convergence_',collection,suffix,'.csv')))[-1]  %>%
mutate(t = rep(sample_sizes,length(languages)))
melt_df   <- reshape2::melt(scores_df, id.vars=c('language','t')) %>%
rename(score = value) %>% na.omit()
languages
melt_df_1 <- subset(melt_df, language %in% languages[1:23])
ggplot(melt_df_1) + geom_line(aes(`t`,score,color=variable)) +
facet_wrap(~language) + geom_hline(yintercept=0,linetype='dashed',color='purple') +
theme(strip.text = element_text(size = 8)) + theme(legend.position = 'bottom') +
guides(color=guide_legend(title="score",nrow = 1)) +
scale_color_discrete(labels=c('\u03B7','\u03A8','\u03A9')) +
scale_x_log10(breaks = scales::trans_breaks("log10", function(x) 10^as.integer(x)),
labels=scales::trans_format('log10',scales::math_format(10^.x)))
ggsave(here('figures',paste0('convergence_',collection,suffix,'_1.pdf')),device = cairo_pdf)
plot_convergence <- function(df) {
ggplot(melt_df_1) + geom_line(aes(`t`,score,color=variable)) +
facet_wrap(~language) + geom_hline(yintercept=0,linetype='dashed',color='purple') +
theme(strip.text = element_text(size = 8)) + theme(legend.position = 'bottom') +
guides(color=guide_legend(title="score",nrow = 1)) +
scale_color_discrete(labels=c('\u03B7','\u03A8','\u03A9')) +
scale_x_log10(breaks = scales::trans_breaks("log10", function(x) 10^as.integer(x)),
labels=scales::trans_format('log10',scales::math_format(10^.x)))
}
plot_convergence(melt_df_1)
languages[24:46]
length(languages[24:46])
length(languages[1:23])
length_def
length_defs
# + convergence of scores TO REDO IN REPORT
sample_sizes <- c(2^seq(3,23))
rows <- lapply(COLLS, function(collection) {
languages <- if (collection=='pud') langs_df_pud$language else langs_df_cv$language
if (collection == 'cv') {
print(collection)
lapply(length_defs[1], function(length_def) {
suffix     <- paste0("_",length_def)
scores_df <- read.csv(here('results',paste0('scores_convergence_',collection,suffix,'.csv')))[-1]  %>%
mutate(t = rep(sample_sizes,length(languages)))
melt_df   <- reshape2::melt(scores_df, id.vars=c('language','t')) %>%
rename(score = value) %>% na.omit()
melt_df_1 <- subset(melt_df, language %in% languages[1:23])
plot_convergence(melt_df_1)
ggsave(here('figures',paste0('convergence_',collection,suffix,'_1.pdf')),device = cairo_pdf)
melt_df_2 <- subset(melt_df, language %in% languages[24:46])
plot_convergence(melt_df_2)
ggsave(here('figures',paste0('convergence_',collection,suffix,'_2.pdf')),device = cairo_pdf)
})
} else if (collection == 'pud') {
print(collection)
suffix <- '_characters'
scores_df <- read.csv(here('results',paste0('scores_convergence_',collection,suffix,'.csv')))[-1]  %>%
mutate(t = rep(sample_sizes,length(languages)))
melt_df   <- reshape2::melt(scores_df, id.vars=c('language','t')) %>%
rename(score = value) %>% na.omit()
plot_convergence(melt_df)
ggsave(here('figures',paste0('convergence_',collection,suffix,'.pdf')),device = cairo_pdf)
}
})
rows <- lapply(COLLS, function(collection) {
languages <- if (collection=='pud') langs_df_pud$language else langs_df_cv$language
if (collection == 'cv') {
print(collection)
lapply(length_defs[1], function(length_def) {
suffix     <- paste0("_",length_def)
scores_df <- read.csv(here('results',paste0('scores_convergence_',collection,suffix,'.csv')))[-1]  %>%
mutate(t = rep(sample_sizes,length(languages)))
melt_df   <- reshape2::melt(scores_df, id.vars=c('language','t')) %>%
rename(score = value) %>% na.omit()
melt_df_1 <- subset(melt_df, language %in% languages[1:23])
plot_convergence(melt_df_1)
ggsave(here('figures',paste0('convergence_',collection,suffix,'_1.pdf')),device = cairo_pdf)
melt_df_2 <- subset(melt_df, language %in% languages[24:46])
plot_convergence(melt_df_2)
ggsave(here('figures',paste0('convergence_',collection,suffix,'_2.pdf')),device = cairo_pdf)
})
} else if (collection == 'pud') {
print(collection)
suffix <- '_characters'
scores_df <- read.csv(here('results',paste0('scores_convergence_',collection,suffix,'.csv')))[-1]  %>%
mutate(t = rep(sample_sizes,length(languages)))
melt_df   <- reshape2::melt(scores_df, id.vars=c('language','t')) %>%
rename(score = value) %>% na.omit()
plot_convergence(melt_df)
ggsave(here('figures',paste0('convergence_',collection,suffix,'.pdf')),device = cairo_pdf)
}
})
languages[24:46]
languages[1:23]
ggplot(df) + geom_line(aes(`t`,score,color=variable)) +
facet_wrap(~language) + geom_hline(yintercept=0,linetype='dashed',color='purple') +
theme(strip.text = element_text(size = 8)) + theme(legend.position = 'bottom') +
guides(color=guide_legend(title="score",nrow = 1)) +
scale_color_discrete(labels=c('\u03B7','\u03A8','\u03A9')) +
scale_x_log10(breaks = scales::trans_breaks("log10", function(x) 10^as.integer(x)),
labels=scales::trans_format('log10',scales::math_format(10^.x)))
plot_convergence <- function(df) {
ggplot(df) + geom_line(aes(`t`,score,color=variable)) +
facet_wrap(~language) + geom_hline(yintercept=0,linetype='dashed',color='purple') +
theme(strip.text = element_text(size = 8)) + theme(legend.position = 'bottom') +
guides(color=guide_legend(title="score",nrow = 1)) +
scale_color_discrete(labels=c('\u03B7','\u03A8','\u03A9')) +
scale_x_log10(breaks = scales::trans_breaks("log10", function(x) 10^as.integer(x)),
labels=scales::trans_format('log10',scales::math_format(10^.x)))
}
# + convergence of scores TO REDO IN REPORT
sample_sizes <- c(2^seq(3,23))
rows <- lapply(COLLS, function(collection) {
languages <- if (collection=='pud') langs_df_pud$language else langs_df_cv$language
if (collection == 'cv') {
print(collection)
lapply(length_defs[1], function(length_def) {
suffix     <- paste0("_",length_def)
scores_df <- read.csv(here('results',paste0('scores_convergence_',collection,suffix,'.csv')))[-1]  %>%
mutate(t = rep(sample_sizes,length(languages)))
melt_df   <- reshape2::melt(scores_df, id.vars=c('language','t')) %>%
rename(score = value) %>% na.omit()
melt_df_1 <- subset(melt_df, language %in% languages[1:23])
plot_convergence(melt_df_1)
ggsave(here('figures',paste0('convergence_',collection,suffix,'_1.pdf')),device = cairo_pdf)
melt_df_2 <- subset(melt_df, language %in% languages[24:46])
plot_convergence(melt_df_2)
ggsave(here('figures',paste0('convergence_',collection,suffix,'_2.pdf')),device = cairo_pdf)
})
} else if (collection == 'pud') {
print(collection)
suffix <- '_characters'
scores_df <- read.csv(here('results',paste0('scores_convergence_',collection,suffix,'.csv')))[-1]  %>%
mutate(t = rep(sample_sizes,length(languages)))
melt_df   <- reshape2::melt(scores_df, id.vars=c('language','t')) %>%
rename(score = value) %>% na.omit()
plot_convergence(melt_df)
ggsave(here('figures',paste0('convergence_',collection,suffix,'.pdf')),device = cairo_pdf)
}
})
