Sys.setlocale("LC_ALL","English")
source('code/analysis/R_functions.R', encoding="utf-8")
setwd("C:/Users/tonic/Pictures/IQL-Research-Project-21-22")
source('code/analysis/R_functions.R', encoding="utf-8")
# GLOBALS  --------------------------------------------------------
## pud
langs_df_pud <- read.csv(here(which_folder('data',filter),"descriptive_tables/pud.csv"))
args = commandArgs(trailingOnly=TRUE)
filter <- if (length(args) == 1) as.logical(args[[1]]) else T
# GLOBALS  --------------------------------------------------------
## pud
langs_df_pud <- read.csv(here(which_folder('data',filter),"descriptive_tables/pud.csv"))
## cv
langs_df_cv <- read.csv(here(which_folder('data',filter),"descriptive_tables/common_voice.csv")) %>%
shorten_names()
source('code/analysis/R_functions.R', encoding="utf-8")
install.packages("DescTools")
source('code/analysis/R_functions.R', encoding="utf-8")
# GLOBALS  --------------------------------------------------------
## pud
langs_df_pud <- read.csv(here(which_folder('data',filter),"descriptive_tables/pud.csv"))
source('code/analysis/R_functions.R', encoding="utf-8")
args = commandArgs(trailingOnly=TRUE)
filter <- if (length(args) == 1) as.logical(args[[1]]) else T
filter <- if (length(args) == 1) as.logical(args[[1]]) else F
# GLOBALS  --------------------------------------------------------
## pud
langs_df_pud <- read.csv(here(which_folder('data',filter),"descriptive_tables/pud.csv"))
## cv
langs_df_cv <- read.csv(here(which_folder('data',filter),"descriptive_tables/common_voice.csv")) %>%
shorten_names()
# + filter alphabet with k-means
print('file: alphabets')
res <- lapply(COLLS,function(collection) {
iso_codes <- if (collection == 'pud') langs_df_pud$iso_code else if (collection == 'cv') langs_df_cv$iso_code
lapply(iso_codes, function(iso_code) {
df <- read.csv(here('code/preprocessing/',paste0(collection,'/characters/',iso_code,'-character.csv'))) %>%
mutate(Freq=log10(frequencyTot)) %>% arrange(desc(Freq))
df$group_opt <- Ckmeans.1d.dp(df$Freq, 2)$cluster
df <- if (filter == T) filter(df,group_opt == 2) else df
alphabet <- df$character
write(alphabet, here(which_folder('data',filter),paste0('alphabets/',collection,'/alphabet_',iso_code,'.txt')))
})
})
# + alphabet sizes
print('file: alphabets sizes')
res <- lapply(COLLS,function(collection) {
langs_df <- if (collection == 'pud') langs_df_pud else if (collection == 'cv') langs_df_cv
parameters <- lapply(langs_df$language, function(language) {
df       <- read_language(language,collection,F,filtered=T)
words    <- if ('romanized_form' %in% colnames(df)) tolower(df$romanized_form) else df$word
alphabet <- unique(unlist(strsplit(words, '')))
alphabet_size <- alphabet %>% length()
list("language"=language, 'A'=alphabet_size)
})
df = do.call(rbind.data.frame,parameters)
write.csv(df, here(which_folder('results',filter),paste0('alphabet_sisez_',collection,'.csv')))
})
# + collections summary
print('tables: collection summaries')
res <- lapply(COLLS, function(collection) {
langs_df <- if (collection == 'pud') langs_df_pud else if (collection == 'cv') langs_df_cv
sum_coll <- langs_df %>% mutate(dialect = NULL, iso_code = NULL) %>% rename(T = X.tokens, n = X.types)
A_coll   <- read.csv(here(which_folder('results',filter),paste0('alphabet_sisez_',collection,'.csv')))
sum_coll$A <- A_coll$A
sum_coll <- sum_coll[,c('language','family','script','A','n','T')] %>%
arrange(family,script,language)
write.csv(sum_coll,here(which_folder('results',filter),paste0('coll_summary_',collection,'.csv')))
print(xtable(sum_coll, type = "latex"),
file = here(which_folder('latex_tables',filter),paste0('coll_summary_',collection,".tex")),
include.rownames=FALSE,include.colnames=FALSE, only.contents = TRUE,
hline.after = c(nrow(sum_coll)))
})
