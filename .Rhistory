Sys.setlocale("LC_ALL","English")
source('code/analysis/R_functions.R', encoding="utf-8")
setwd("/Users/sonia/Library/Mobile Documents/com~apple~CloudDocs/FIB/IQL/IQLproject/IQL-Research-Project-21-22")
Sys.setlocale("LC_ALL","English")
source('code/analysis/R_functions.R', encoding="utf-8")
# GLOBALS  --------------------------------------------------------
langs_df_pud <- read.csv(paste0(which_folder('data',filter),"/descriptive_tables/pud.csv"))
langs_df_cv <- read.csv(paste0(which_folder('data',filter),"/descriptive_tables/common_voice.csv")) %>%
shorten_names()
filter <- T
# GLOBALS  --------------------------------------------------------
langs_df_pud <- read.csv(paste0(which_folder('data',filter),"/descriptive_tables/pud.csv"))
langs_df_cv <- read.csv(paste0(which_folder('data',filter),"/descriptive_tables/common_voice.csv")) %>%
shorten_names()
collection ='cv'
suffix <- '_characters'
scores_df <- read.csv(paste0(which_folder('results',filter),'/scores_convergence_',collection,suffix,'.csv'))[-1]  %>%
mutate(t = rep(sample_sizes,length(languages)))
sample_sizes <- c(2^seq(3,23))
scores_df <- read.csv(paste0(which_folder('results',filter),'/scores_convergence_',collection,suffix,'.csv'))[-1]  %>%
mutate(t = rep(sample_sizes,length(languages))) %>%
reshape2::melt(id.vars=c('language','t')) %>%
rename(score = value) %>% na.omit()
scores_df <- read.csv(paste0(which_folder('results',filter),'/scores_convergence_',collection,suffix,'.csv'))[-1]  %>%
mutate(t = rep(sample_sizes,length(languages)))
languages <- if (collection=='pud') langs_df_pud$language else langs_df_cv$language
languages <- sort(languages)
scores_df <- read.csv(paste0(which_folder('results',filter),'/scores_convergence_',collection,suffix,'.csv'))[-1]  %>%
mutate(t = rep(sample_sizes,length(languages)))
scores_df <- read.csv(paste0(which_folder('results',filter),'/scores_convergence_',collection,suffix,'.csv'))[-1]  %>%
mutate(t = rep(sample_sizes,length(languages))) %>%
reshape2::melt(id.vars=c('language','t')) %>%
rename(score = value) %>% na.omit()
melt_df_1 <- subset(scores_df, language %in% languages[1:23])
plot_convergence(melt_df_1)
plot_convergence(scores_df)
plot_convergence <- function(df) {
ggplot(df) + geom_line(aes(`t`,score,color=variable),size=1) +
facet_wrap(~language, ncol = 5) + geom_hline(yintercept=0,linetype='dashed',color='purple') +
theme(strip.text = element_text(size = 12),legend.position = 'bottom') +
guides(color=guide_legend(title="score",nrow = 1)) +
scale_color_discrete(labels=c('\u03B7','\u03A8','\u03A9')) +
format_log_x_axis + standart_theme
}
plot_convergence(scores_df)
plot_convergence <- function(df) {
ggplot(df) + geom_line(aes(`t`,score,color=variable),size=1) +
facet_wrap(~language, ncol = 6) + geom_hline(yintercept=0,linetype='dashed',color='purple') +
theme(strip.text = element_text(size = 12),legend.position = 'bottom') +
guides(color=guide_legend(title="score",nrow = 1)) +
scale_color_discrete(labels=c('\u03B7','\u03A8','\u03A9')) +
format_log_x_axis + standart_theme
}
plot_convergence(scores_df)
ggsave(paste0(which_folder('figures',filter),'/convergence_',collection,suffix,'.pdf'),
device = cairo_pdf, width = 9, height = 12)
ggsave(paste0(which_folder('figures',filter),'/convergence_',collection,suffix,'.pdf'),
device = cairo_pdf, width = 11, height = 12)
ggsave(paste0(which_folder('figures',filter),'/convergence_',collection,suffix,'.pdf'),
device = cairo_pdf, width = 10, height = 12)
format_log_x_axis <- scale_x_log10(labels = label_log())
plot_convergence <- function(df) {
ggplot(df) + geom_line(aes(`t`,score,color=variable),size=1) +
facet_wrap(~language, ncol = 6) + geom_hline(yintercept=0,linetype='dashed',color='purple') +
theme(strip.text = element_text(size = 12),legend.position = 'bottom') +
guides(color=guide_legend(title="score",nrow = 1)) +
scale_color_discrete(labels=c('\u03B7','\u03A8','\u03A9')) +
format_log_x_axis + standart_theme
}
plot_convergence(scores_df)
format_log_y_axis <- scale_y_log10(labels = label_log())
format_log_x_axis <- scale_x_log10(breaks = 10^(seq(1,7,3)), labels = label_log())
library(scales)
format_log_x_axis <- scale_x_log10(breaks = 10^(seq(1,7,3)), labels = label_log())
plot_convergence <- function(df) {
ggplot(df) + geom_line(aes(`t`,score,color=variable),size=1) +
facet_wrap(~language, ncol = 6) + geom_hline(yintercept=0,linetype='dashed',color='purple') +
theme(strip.text = element_text(size = 12),legend.position = 'bottom') +
guides(color=guide_legend(title="score",nrow = 1)) +
scale_color_discrete(labels=c('\u03B7','\u03A8','\u03A9')) +
format_log_x_axis + standart_theme
}
plot_convergence(scores_df)
format_log_x_axis <- scale_x_log10(breaks = 10^(c(1,3,5,7)), labels = label_log())
plot_convergence <- function(df) {
ggplot(df) + geom_line(aes(`t`,score,color=variable),size=1) +
facet_wrap(~language, ncol = 6) + geom_hline(yintercept=0,linetype='dashed',color='purple') +
theme(strip.text = element_text(size = 12),legend.position = 'bottom') +
guides(color=guide_legend(title="score",nrow = 1)) +
scale_color_discrete(labels=c('\u03B7','\u03A8','\u03A9')) +
format_log_x_axis + standart_theme
}
plot_convergence(scores_df)
ggsave(paste0(which_folder('figures',filter),'/convergence_',collection,suffix,'.pdf'),
device = cairo_pdf, width = 10, height = 12)
ggsave(paste0(which_folder('figures',filter),'/convergence_',collection,suffix,'.pdf'),
device = cairo_pdf, width = 11, height = 12)
rows <- lapply(COLLS, function(collection) {
languages <- if (collection=='pud') langs_df_pud$language else langs_df_cv$language
languages <- sort(languages)
if (collection == 'cv') {
print(collection)
lapply(length_defs, function(length_def) {
suffix     <- paste0("_",length_def)
# df
scores_df <- read.csv(paste0(which_folder('results',filter),'/scores_convergence_',collection,suffix,'.csv'))[-1]  %>%
mutate(t = rep(sample_sizes,length(languages))) %>%
reshape2::melt(id.vars=c('language','t')) %>%
rename(score = value) %>% na.omit()
# plot
plot_convergence(scores_df)
ggsave(paste0(which_folder('figures',filter),'/convergence_',collection,suffix,'.pdf'),
device = cairo_pdf, width = 11, height = 12)
})
} else if (collection == 'pud') {
print(collection)
suffix <- '_characters'
scores_df <- read.csv(paste0(which_folder('results',filter),'/scores_convergence_',collection,suffix,'.csv'))[-1]  %>%
mutate(t = rep(sample_sizes,length(languages))) %>%
reshape2::melt(id.vars=c('language','t')) %>%
rename(score = value) %>% na.omit()
plot_convergence(scores_df)
ggsave(paste0(which_folder('figures',filter),'/convergence_',collection,suffix,'.pdf'),
device = cairo_pdf, width = 10, height = 6)
}
})
sample_sizes <- c(2^seq(3,23))
rows <- lapply(COLLS, function(collection) {
languages <- if (collection=='pud') langs_df_pud$language else langs_df_cv$language
languages <- sort(languages)
if (collection == 'cv') {
print(collection)
lapply(length_defs, function(length_def) {
suffix     <- paste0("_",length_def)
# df
scores_df <- read.csv(paste0(which_folder('results',filter),'/scores_convergence_',collection,suffix,'.csv'))[-1]  %>%
mutate(t = rep(sample_sizes,length(languages))) %>%
reshape2::melt(id.vars=c('language','t')) %>%
rename(score = value) %>% na.omit()
# plot
plot_convergence(scores_df)
ggsave(paste0(which_folder('figures',filter),'/convergence_',collection,suffix,'.pdf'),
device = cairo_pdf, width = 11, height = 12)
})
} else if (collection == 'pud') {
print(collection)
suffix <- '_characters'
scores_df <- read.csv(paste0(which_folder('results',filter),'/scores_convergence_',collection,suffix,'.csv'))[-1]  %>%
mutate(t = rep(sample_sizes,length(languages))) %>%
reshape2::melt(id.vars=c('language','t')) %>%
rename(score = value) %>% na.omit()
plot_convergence(scores_df)
ggsave(paste0(which_folder('figures',filter),'/convergence_',collection,suffix,'.pdf'),
device = cairo_pdf, width = 10, height = 6)
}
})
df <- read_file('opt',collection,filter,length_def) %>% select(language, L,Lmin,Lrand,tau_min,tau)
length_def <- 'characters'
df <- read_file('opt',collection,filter,length_def) %>% select(language, L,Lmin,Lrand,tau_min,tau)
# a)
ggplot(df,aes(x=Lmin, y=L, label=language)) + geom_point(size=3) + labs(x=bquote(L[min])) +
geom_abline(slope=1, intercept=0, color = 'purple') + geom_text_repel(size=3) +
theme(text = element_text(size = 20))
# a)
ggplot(df,aes(x=Lmin, y=L, label=language)) + geom_point(size=3) + labs(x=bquote(L[min])) +
geom_abline(slope=1, intercept=0, color = 'purple', size = 1) + geom_text_repel(size=3) +
theme(text = element_text(size = 20))
# a)
ggplot(df,aes(x=Lmin, y=L, label=language)) + geom_point(size=3) + labs(x=bquote(L[min])) +
geom_abline(slope=1, intercept=0, color = 'purple', size = 1) + geom_text_repel(size=3) +
theme(text = element_text(size = 20))
ggsave(paste0(which_folder('figures',filter),'/a_',collection,"_",length_def,'.pdf'),
device = cairo_pdf, width = 4, height = 5)
ggsave(paste0(which_folder('figures',filter),'/a_',collection,"_",length_def,'.pdf'),
device = cairo_pdf, width = 6, height = 8)
plot_scores_ingredients <- function(filter, collection, length_def) {
df <- read_file('opt',collection,filter,length_def) %>% select(language, L,Lmin,Lrand,tau_min,tau)
# a)
ggplot(df,aes(x=Lmin, y=L, label=language)) + geom_point(size=3) + labs(x=bquote(L[min])) +
geom_abline(slope=1, intercept=0, color = 'purple', size = 1) + geom_text_repel(size=3) +
theme(text = element_text(size = 20))
ggsave(paste0(which_folder('figures',filter),'/a_',collection,"_",length_def,'.pdf'),
device = cairo_pdf, width = 6, height = 8)
# b)
df %>% mutate(`Lr-Lmin`=Lrand-Lmin, `Lr-L`=Lrand-L) %>%
ggplot(aes(y=`Lr-Lmin`, x=`Lr-L`, label=language)) + geom_point() +
labs(y=bquote(L[r]-L[min]), x = bquote(L[r]-L)) +
geom_abline(slope=1, intercept=0, color = 'purple') + geom_text_repel(size=3)
ggsave(paste0(which_folder('figures',filter),'/b_',collection,"_",length_def,'.pdf'),
device = cairo_pdf, width = 6, height = 8)
# c)
ggplot(df,aes(x=tau_min, y=tau, label=language)) + geom_point() +
labs(x=expression(tau[min]), y=expression(tau)) + scale_y_continuous(limits = c(-0.9, 0)) +
geom_abline(slope=1, intercept=0, color = 'purple') + geom_text_repel(size=3)
ggsave(paste0(which_folder('figures',filter),'/c_',collection,"_",length_def,'.pdf'),
device = cairo_pdf, width = 6, height = 8)
}
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
plot_scores_ingredients(filter, collection, length_def)
})
} else {
length_def <- 'characters'
plot_scores_ingredients(filter, collection, length_def)
}
})
plot_scores_ingredients <- function(filter, collection, length_def) {
df <- read_file('opt',collection,filter,length_def) %>% select(language, L,Lmin,Lrand,tau_min,tau)
# a)
ggplot(df,aes(x=Lmin, y=L, label=language)) + geom_point(size=2) + labs(x=bquote(L[min])) +
geom_abline(slope=1, intercept=0, color = 'purple', size = 1) + geom_text_repel(size=4) +
theme(text = element_text(size = 20))
ggsave(paste0(which_folder('figures',filter),'/a_',collection,"_",length_def,'.pdf'),
device = cairo_pdf, width = 6, height = 8)
# b)
df %>% mutate(`Lr-Lmin`=Lrand-Lmin, `Lr-L`=Lrand-L) %>%
ggplot(aes(y=`Lr-Lmin`, x=`Lr-L`, label=language)) + geom_point() +
labs(y=bquote(L[r]-L[min]), x = bquote(L[r]-L)) +
geom_abline(slope=1, intercept=0, color = 'purple') + geom_text_repel(size=3)
ggsave(paste0(which_folder('figures',filter),'/b_',collection,"_",length_def,'.pdf'),
device = cairo_pdf, width = 6, height = 8)
# c)
ggplot(df,aes(x=tau_min, y=tau, label=language)) + geom_point() +
labs(x=expression(tau[min]), y=expression(tau)) + scale_y_continuous(limits = c(-0.9, 0)) +
geom_abline(slope=1, intercept=0, color = 'purple') + geom_text_repel(size=3)
ggsave(paste0(which_folder('figures',filter),'/c_',collection,"_",length_def,'.pdf'),
device = cairo_pdf, width = 6, height = 8)
}
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
plot_scores_ingredients(filter, collection, length_def)
})
} else {
length_def <- 'characters'
plot_scores_ingredients(filter, collection, length_def)
}
})
plot_scores_ingredients <- function(filter, collection, length_def) {
df <- read_file('opt',collection,filter,length_def) %>% select(language, L,Lmin,Lrand,tau_min,tau)
# a)
ggplot(df,aes(x=Lmin, y=L, label=language)) + geom_point(size=2) + labs(x=bquote(L[min])) +
geom_abline(slope=1, intercept=0, color = 'purple', size = 1) + geom_text_repel(size=4) +
theme(text = element_text(size = 20))
ggsave(paste0(which_folder('figures',filter),'/a_',collection,"_",length_def,'.pdf'),
device = cairo_pdf, width = 6, height = 8)
# b)
df %>% mutate(`Lr-Lmin`=Lrand-Lmin, `Lr-L`=Lrand-L) %>%
ggplot(aes(y=`Lr-Lmin`, x=`Lr-L`, label=language)) + geom_point(size=2) +
labs(y=bquote(L[r]-L[min]), x = bquote(L[r]-L)) +
geom_abline(slope=1, intercept=0, color = 'purple') + geom_text_repel(size=4)
ggsave(paste0(which_folder('figures',filter),'/b_',collection,"_",length_def,'.pdf'),
device = cairo_pdf, width = 6, height = 8)
# c)
ggplot(df,aes(x=tau_min, y=tau, label=language)) + geom_point(size=2) +
labs(x=expression(tau[min]), y=expression(tau)) + scale_y_continuous(limits = c(-0.9, 0)) +
geom_abline(slope=1, intercept=0, color = 'purple') + geom_text_repel(size=4)
ggsave(paste0(which_folder('figures',filter),'/c_',collection,"_",length_def,'.pdf'),
device = cairo_pdf, width = 6, height = 8)
}
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
plot_scores_ingredients(filter, collection, length_def)
})
} else {
length_def <- 'characters'
plot_scores_ingredients(filter, collection, length_def)
}
})
plot_scores_ingredients <- function(filter, collection, length_def) {
df <- read_file('opt',collection,filter,length_def) %>% select(language, L,Lmin,Lrand,tau_min,tau)
# a)
ggplot(df,aes(x=Lmin, y=L, label=language)) + geom_point(size=2) + labs(x=bquote(L[min])) +
geom_abline(slope=1, intercept=0, color = 'purple', size = 1) + geom_text_repel(size=4) +
theme(text = element_text(size = 20))
ggsave(paste0(which_folder('figures',filter),'/a_',collection,"_",length_def,'.pdf'),
device = cairo_pdf, width = 6, height = 8)
# b)
df %>% mutate(`Lr-Lmin`=Lrand-Lmin, `Lr-L`=Lrand-L) %>%
ggplot(aes(y=`Lr-Lmin`, x=`Lr-L`, label=language)) + geom_point(size=2) +
labs(y=bquote(L[r]-L[min]), x = bquote(L[r]-L)) +
geom_abline(slope=1, intercept=0, color = 'purple') + geom_text_repel(size=4) +
theme(text = element_text(size = 20))
ggsave(paste0(which_folder('figures',filter),'/b_',collection,"_",length_def,'.pdf'),
device = cairo_pdf, width = 6, height = 8)
# c)
ggplot(df,aes(x=tau_min, y=tau, label=language)) + geom_point(size=2) +
labs(x=expression(tau[min]), y=expression(tau)) + scale_y_continuous(limits = c(-0.9, 0)) +
geom_abline(slope=1, intercept=0, color = 'purple') + geom_text_repel(size=4) +
theme(text = element_text(size = 20))
ggsave(paste0(which_folder('figures',filter),'/c_',collection,"_",length_def,'.pdf'),
device = cairo_pdf, width = 6, height = 8)
}
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
plot_scores_ingredients(filter, collection, length_def)
})
} else {
length_def <- 'characters'
plot_scores_ingredients(filter, collection, length_def)
}
})
