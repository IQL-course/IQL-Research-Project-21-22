source('code/analysis/R_functions.R', encoding="utf-8")
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/FIB/IQL/project/IQL-Research-Project-21-22")
source('code/analysis/R_functions.R', encoding="utf-8")
# GLOBALS  --------------------------------------------------------
## pud
langs_df_pud <- read.csv(here(which_folder('data',filter),"descriptive_tables/pud.csv"))
## cv
langs_df_cv <- read.csv(here(which_folder('data',filter),"descriptive_tables/common_voice.csv")) %>%
shorten_names()
filter <- if (length(args) == 1) as.logical(args[[1]]) else T
filter <- T
# GLOBALS  --------------------------------------------------------
## pud
langs_df_pud <- read.csv(here(which_folder('data',filter),"descriptive_tables/pud.csv"))
## cv
langs_df_cv <- read.csv(here(which_folder('data',filter),"descriptive_tables/common_voice.csv")) %>%
shorten_names()
iters <- 1e+06
# + summary opt scores null
print('tables: summary of scores expected values')
res <- lapply(c('omega','eta','psi'), function(score) {
summ <- opt_score_summary(score,null=T,iters = iters) %>% mutate(empty = rep('',3))
summ <- summ[,c(9,1,2,3,4,5,6,7,8)]
print(xtable(summ, type = "latex",digits=3),
file = here(which_folder('latex_tables',filter),paste0("opt_scores_summary_null_",score,corr_suffix,".tex")),
caption.placement = "top",include.rownames=FALSE,include.colnames=FALSE,
only.contents = TRUE,hline.after = c(nrow(summ)))
})
res <- lapply(c(1e+06), function(iters) {
lapply(c('kendall','pearson'), function(plot_corr) {
plot_corr_suffix <- paste0('_',plot_corr)
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
df <- read_file('null',collection,length_def,filter,iters)
plot_correlogram(df,plot_corr,'null',HB_correct=T,8,22,18)
ggsave(here(which_folder('figures',filter), paste0('corrplot_null_',collection,'_',length_def,'_',iters,plot_corr_suffix,'.pdf')),
device = cairo_pdf, width = 6, height = 6)
})
} else {
length_def <- 'characters'
suffix       <- paste0("_",length_def)
df <- read_file('null',collection,length_def,filter,iters)
plot_correlogram(df,plot_corr,'null',HB_correct=T,8,22,18)
ggsave(here(which_folder('figures',filter),paste0('corrplot_null_',collection,suffix,'_',iters,plot_corr_suffix,'.pdf')),
device = cairo_pdf, width = 6, height = 6)
}
})
})
})
# evolution of correlation
print('figures: evolution of correlation over number of randomizations')
## cv
res <- lapply(length_defs, function(length_def) {
dfs <- lapply(c(1000,10000,1e+05,1e+06), function(iters) {
dfs <- lapply(c('kendall','pearson'), function(plot_corr) {
read_file('null','cv',length_def,filter,iters) %>%
long_corr_df(plot_corr,HB_correct = T)
})
do.call(rbind,dfs) %>% mutate(randomizations=iters)
})
p <- do.call(rbind,dfs) %>% plot_corr_evolution()
ggsave(here(which_folder('figures',filter),paste0('corr_evolution_cv_',length_def,'.pdf')),
device = cairo_pdf, width = 9, height = 5)
})
# pud
dfs <- lapply(c(1000,10000,1e+05,1e+06), function(iters) {
dfs <- lapply(c('kendall','pearson'), function(plot_corr) {
read_file('null','pud','characters',filter,iters) %>%
long_corr_df(plot_corr,HB_correct = T)
})
do.call(rbind,dfs) %>% mutate(randomizations=iters)
})
df <- do.call(rbind,dfs)
plot_corr_evolution(df)
# E[scores] vs Lmin
print('figures: correlation between scores expectations and Lmin')
iters <- 1e+06
rows_cv <- lapply(length_defs, function(length_def) {
df <- read_file('null','cv',length_def,filter,iters)%>%
mutate(`Lmin/Lrand` = Lmin/Lrand) %>% select(language,Lmin,psi,omega) %>%
rename(`E[psi]`=psi, `E[omega]`=omega) %>% mutate(length_def = length_def) %>%
merge(langs_df_cv[,c('language','X.tokens')], by = 'language')
})
df <- do.call(rbind,rows_cv)
reshape2::melt(df, id.vars=c('language','Lmin','length_def','X.tokens')) %>%
ggplot(aes(x=`Lmin`,y=value,label=ifelse(log10(X.tokens)<=4,language,''),fill=log10(X.tokens))) +
geom_text_repel(size=3,color='black',box.padding=0.5)+
geom_point(colour="black",pch=21,size=3) + geom_hline(yintercept = 0,color='purple',linetype='dashed') +
facet_grid(cols=vars(length_def),rows=vars(variable),scales = 'free',
labeller = labeller(variable=exp_scores_labs, length_def=length_labs)) +
scale_fill_gradient2(low = "red", mid = "yellow", high = "green", midpoint = 5) +
labs(fill=expression(paste(log[10],'T')), x=bquote(L[min]), y = 'expected score value') +
scale_y_continuous(label=scientific_10) +
theme(text = element_text(size = 16),
legend.text = element_text(size = 13),
legend.title = element_text(size = 13))
plot_corr <- 'pearson'
plot_corr_suffix <- paste0('_',plot_corr)
collection <- 'cv'
length_def <- 'characters'
df <- read_file('null',collection,length_def,filter,iters)
plot_correlogram(df,plot_corr,'null',HB_correct=T,8,22,18)
length_def <- 'medianDuration'
df <- read_file('null',collection,length_def,filter,iters)
plot_correlogram(df,plot_corr,'null',HB_correct=T,8,22,18)
## correlation wit Lmin, Lr, and Lmin/Lr
print('figures: correlograms of scores expectations with baselines')
res <- lapply(c(1e+06), function(iters) {
lapply(c('kendall','pearson'), function(plot_corr) {
plot_corr_suffix <- paste0('_',plot_corr)
rows <- lapply(COLLS, function(collection) {
if (collection == 'cv') {
lapply(length_defs, function(length_def) {
df <- read_file('null',collection,length_def,filter,iters)
plot_correlogram(df,plot_corr,'null',HB_correct=T,8,22,18)
ggsave(here(which_folder('figures',filter), paste0('corrplot_null_',collection,'_',length_def,'_',iters,plot_corr_suffix,'.pdf')),
device = cairo_pdf, width = 6, height = 6)
})
} else {
length_def <- 'characters'
suffix       <- paste0("_",length_def)
df <- read_file('null',collection,length_def,filter,iters)
plot_correlogram(df,plot_corr,'null',HB_correct=T,8,22,18)
ggsave(here(which_folder('figures',filter),paste0('corrplot_null_',collection,suffix,'_',iters,plot_corr_suffix,'.pdf')),
device = cairo_pdf, width = 6, height = 6)
}
})
})
})
# evolution of correlation
print('figures: evolution of correlation over number of randomizations')
## cv
res <- lapply(length_defs, function(length_def) {
dfs <- lapply(c(1000,10000,1e+05,1e+06), function(iters) {
dfs <- lapply(c('kendall','pearson'), function(plot_corr) {
read_file('null','cv',length_def,filter,iters) %>%
long_corr_df(plot_corr,HB_correct = T)
})
do.call(rbind,dfs) %>% mutate(randomizations=iters)
})
p <- do.call(rbind,dfs) %>% plot_corr_evolution()
ggsave(here(which_folder('figures',filter),paste0('corr_evolution_cv_',length_def,'.pdf')),
device = cairo_pdf, width = 9, height = 5)
})
# pud
dfs <- lapply(c(1000,10000,1e+05,1e+06), function(iters) {
dfs <- lapply(c('kendall','pearson'), function(plot_corr) {
read_file('null','pud','characters',filter,iters) %>%
long_corr_df(plot_corr,HB_correct = T)
})
do.call(rbind,dfs) %>% mutate(randomizations=iters)
})
df <- do.call(rbind,dfs)
plot_corr_evolution(df)
ggsave(here(which_folder('figures',filter),paste0('corr_evolution_pud_characters.pdf')),
device = cairo_pdf, width = 9, height = 5)
# E[scores] vs Lmin
print('figures: correlation between scores expectations and Lmin')
iters <- 1e+06
rows_cv <- lapply(length_defs, function(length_def) {
df <- read_file('null','cv',length_def,filter,iters)%>%
mutate(`Lmin/Lrand` = Lmin/Lrand) %>% select(language,Lmin,psi,omega) %>%
rename(`E[psi]`=psi, `E[omega]`=omega) %>% mutate(length_def = length_def) %>%
merge(langs_df_cv[,c('language','X.tokens')], by = 'language')
})
df <- do.call(rbind,rows_cv)
reshape2::melt(df, id.vars=c('language','Lmin','length_def','X.tokens')) %>%
ggplot(aes(x=`Lmin`,y=value,label=ifelse(log10(X.tokens)<=4,language,''),fill=log10(X.tokens))) +
geom_text_repel(size=3,color='black',box.padding=0.5)+
geom_point(colour="black",pch=21,size=3) + geom_hline(yintercept = 0,color='purple',linetype='dashed') +
facet_grid(cols=vars(length_def),rows=vars(variable),scales = 'free',
labeller = labeller(variable=exp_scores_labs, length_def=length_labs)) +
scale_fill_gradient2(low = "red", mid = "yellow", high = "green", midpoint = 5) +
labs(fill=expression(paste(log[10],'T')), x=bquote(L[min]), y = 'expected score value') +
scale_y_continuous(label=scientific_10) +
theme(text = element_text(size = 16),
legend.text = element_text(size = 13),
legend.title = element_text(size = 13))
ggsave(here(which_folder('figures',filter),paste0('correlation_scores_Lmin_',iters,'.pdf')),
device = cairo_pdf, width = 8, height = 7)
# E[eta] vs theoretical lower bound
print('figures: E[eta] vs theoretical lower bound')
rows <- lapply(COLLS, function(collection) {
if (collection == 'pud') {
length_def <- 'characters'
suffix       <- paste0("_",length_def)
read_file('null',collection,length_def,filter,iters) %>% plot_etaVSlowerbound()
ggsave(here(which_folder('figures',filter),paste0('E_eta_LminLr_',collection,suffix,'.pdf')),
device = cairo_pdf, width = 5, height = 5)
} else {
lapply(length_defs, function(length_def) {
suffix       <- paste0("_",length_def)
read_file('null',collection,length_def,filter,iters) %>% plot_etaVSlowerbound()
ggsave(here(which_folder('figures',filter),paste0('E_eta_LminLr_',collection,suffix,'.pdf')),
device = cairo_pdf, width = 5, height = 5)
})
}
})
# E[scores] vs Lmin
print('figures: correlation between scores expectations and Lmin')
iters <- 1e+06
rows_cv <- lapply(length_defs, function(length_def) {
df <- read_file('null','cv',length_def,filter,iters)%>%
mutate(`Lmin/Lrand` = Lmin/Lrand) %>% select(language,Lmin,psi,omega) %>%
rename(`E[psi]`=psi, `E[omega]`=omega) %>% mutate(length_def = length_def) %>%
merge(langs_df_cv[,c('language','X.tokens')], by = 'language')
})
df <- do.call(rbind,rows_cv)
reshape2::melt(df, id.vars=c('language','Lmin','length_def','X.tokens')) %>%
ggplot(aes(x=`Lmin`,y=value,label=ifelse(log10(X.tokens)<=4,language,''),fill=log10(X.tokens))) +
geom_text_repel(size=3,color='black',box.padding=0.5)+
geom_point(colour="black",pch=21,size=3) + geom_hline(yintercept = 0,color='purple',linetype='dashed') +
facet_grid(cols=vars(length_def),rows=vars(variable),scales = 'free',
labeller = labeller(variable=exp_scores_labs, length_def=length_labs)) +
scale_fill_gradient2(low = "red", mid = "yellow", high = "green", midpoint = 5) +
labs(fill=expression(paste(log[10],'T')), x=bquote(L[min]), y = 'expected score value') +
scale_y_continuous(label=scientific_10) +
theme(text = element_text(size = 16),
legend.text = element_text(size = 13),
legend.title = element_text(size = 13))
ggsave(here(which_folder('figures',filter),paste0('correlation_scores_Lmin_',iters,'.pdf')),
device = cairo_pdf, width = 8, height = 7)
ggsave(here(which_folder('figures',filter),paste0('correlation_scores_Lmin_',iters,'.pdf')),
device = cairo_pdf)
